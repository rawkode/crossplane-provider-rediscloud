---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: databases.essentials.redis.io
spec:
  group: essentials.redis.io
  names:
    categories:
    - crossplane
    - managed
    - rediscloud
    kind: Database
    listKind: DatabaseList
    plural: databases
    singular: database
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Database is the Schema for the Databases API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseSpec defines the desired state of Database
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  alert:
                    description: |-
                      A block defining Redis database alert. Can be specified multiple times. Documented below.
                      Set of alerts to enable on the database
                    items:
                      properties:
                        name:
                          description: |-
                            The alert name.
                            Alert name
                          type: string
                        value:
                          description: |-
                            The alert value.
                            Alert value
                          type: number
                      type: object
                    type: array
                  clientTlsCertificates:
                    description: A list of TLS/SSL certificates (public keys) with
                      new line characters replaced by \n.
                    items:
                      type: string
                    type: array
                  dataEviction:
                    description: |-
                      Data items eviction method. Either: 'allkeys-lru', 'allkeys-lfu', 'allkeys-random', 'volatile-lru', 'volatile-lfu', 'volatile-random', 'volatile-ttl' or 'noeviction'. Default: 'volatile-lru'.
                      The data items eviction policy (either: 'allkeys-lru', 'allkeys-lfu', 'allkeys-random', 'volatile-lru', 'volatile-lfu', 'volatile-random', 'volatile-ttl' or 'noeviction'. Default: 'volatile-lru')
                    type: string
                  dataPersistence:
                    description: |-
                      Rate of database data persistence (in persistent storage). Either: 'none', 'aof-every-1-second', 'aof-every-write', 'snapshot-every-1-hour', 'snapshot-every-6-hours' or 'snapshot-every-12-hours'.
                      Rate of database data persistence (in persistent storage).
                    type: string
                  enableDatabaseClustering:
                    description: |-
                      Only used with Pay-As-You-Go databases. Distributes database data to different cloud instances. Default false.
                      Distributes database data to different cloud instances
                    type: boolean
                  enableDefaultUser:
                    description: |-
                      When true enables connecting to the database with the default user. Default true. If set to false, any value for password will be ignored.
                      When 'true', enables connecting to the database with the 'default' user. Default: 'true'
                    type: boolean
                  enablePaygFeatures:
                    description: |-
                      Whether to enable features restricted to Pay-As-You-Go legacy databases. It is not supported for new databases. Default false.
                      Enable features for PAYG databases
                    type: boolean
                  enableTls:
                    description: |-
                      Only used with Pay-As-You-Go databases. Use TLS for authentication. Default false.
                      Use TLS for authentication
                    type: boolean
                  externalEndpointForOssClusterApi:
                    description: |-
                      Only used with Pay-As-You-Go databases. Should use the external endpoint for open-source (OSS) Cluster API. Default false.
                      Should use the external endpoint for open-source (OSS) Cluster API
                    type: boolean
                  memoryLimitInGb:
                    description: |-
                      Only used with Pay-As-You-Go databases. Maximum memory usage for the database.
                      Maximum memory usage for this specific database
                    type: number
                  modules:
                    description: |-
                      A list of modules objects, documented below. Modifying this attribute will force creation of a new resource.
                      Modules to be provisioned in the database
                    items:
                      properties:
                        name:
                          description: A meaningful name to identify the database.
                          type: string
                      type: object
                    type: array
                  name:
                    description: |-
                      A meaningful name to identify the database.
                      A meaningful name to identify the database
                    type: string
                  passwordSecretRef:
                    description: |-
                      Password to access the database. If not specified, a random 32 character long alphanumeric password will be automatically generated.
                      Password used to access the database. If left empty, the password will be generated automatically
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  periodicBackupPath:
                    description: |-
                      If specified, automatic backups will be every 24 hours and immediate backups to this path will be allowed upon request.
                      Path that will be used to store database backup files
                    type: string
                  protocol:
                    description: |-
                      Database protocol. 'stack' is a suite of all Redis' data modules. Default: 'stack'. Either: 'redis', 'memcached' or 'stack'. 'redis' is only used with Pay-As-You-Go databases.
                      The protocol that will be used to access the database, (either 'redis', 'memcached' or 'stack')
                    type: string
                  regexRules:
                    description: |-
                      Only used with Pay-As-You-Go databases. Shard regex rules. Relevant only for a sharded database.
                      Shard regex rules. Relevant only for a sharded database. Supported only for 'Pay-As-You-Go' subscriptions
                    items:
                      type: string
                    type: array
                  replica:
                    description: |-
                      If specified, this database will be a replica of the specified Redis databases provided, documented below.
                      Details of database replication
                    items:
                      properties:
                        syncSource:
                          description: |-
                            The sources to replicate. Documented below.
                            A source database to replicate here
                          items:
                            properties:
                              encryption:
                                description: |-
                                  Defines if encryption should be used to connect to the sync source.
                                  Defines if encryption should be used to connect to the sync source. If not provided and if the source is a Redis Cloud instance, it will automatically detect if the source uses encryption
                                type: boolean
                              endpoint:
                                description: |-
                                  A Redis URI (sample format: 'redis://user:password@host:port)'. If the URI provided is a Redis Cloud instance, only the host and port should be provided (using the format: ['redis://endpoint1:6379', 'redis://endpoint2:6380'] ).
                                  A Redis URI (sample format: 'redis://user:password@host:port)'. If the URI provided is Redis Cloud instance, only host and port should be provided (using the format: ['redis://endpoint1:6379', 'redis://endpoint2:6380'])
                                type: string
                              serverCert:
                                description: |-
                                  TLS certificate chain of the sync source.
                                  TLS/SSL certificate chain of the sync source. If left null and if the source is a Redis Cloud instance, it will automatically detect the certificate to use
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  replication:
                    description: |-
                      Databases replication. Either: 'true' or 'false'.
                      Database's replication
                    type: boolean
                  respVersion:
                    description: |-
                      RESP version must be compatible with the Redis version.
                      RESP version must be compatible with Redis version.
                    type: string
                  sourceIps:
                    description: |-
                      List of source IP addresses or subnet masks. If specified, Redis clients will be able to connect to this database only from within the specified source IP address ranges. Example value: ['192.168.10.0/32', '192.168.12.0/24'].
                      Set of CIDR addresses to allow access to the database
                    items:
                      type: string
                    type: array
                  subscriptionId:
                    description: |-
                      The ID of the subscription to create the database in. Modifying this attribute will force creation of a new resource.
                      Identifier of the essentials subscription
                    type: number
                  supportOssClusterApi:
                    description: |-
                      Only used with Pay-As-You-Go databases. Support Redis open-source (OSS) Cluster API. Default false.
                      Support Redis open-source (OSS) Cluster API
                    type: boolean
                  tags:
                    additionalProperties:
                      type: string
                    description: |-
                      A string/string map of tags to associate with this database. Note that all keys and values must be lowercase.
                      Tags for database management
                    type: object
                    x-kubernetes-map-type: granular
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  alert:
                    description: |-
                      A block defining Redis database alert. Can be specified multiple times. Documented below.
                      Set of alerts to enable on the database
                    items:
                      properties:
                        name:
                          description: |-
                            The alert name.
                            Alert name
                          type: string
                        value:
                          description: |-
                            The alert value.
                            Alert value
                          type: number
                      type: object
                    type: array
                  clientTlsCertificates:
                    description: A list of TLS/SSL certificates (public keys) with
                      new line characters replaced by \n.
                    items:
                      type: string
                    type: array
                  dataEviction:
                    description: |-
                      Data items eviction method. Either: 'allkeys-lru', 'allkeys-lfu', 'allkeys-random', 'volatile-lru', 'volatile-lfu', 'volatile-random', 'volatile-ttl' or 'noeviction'. Default: 'volatile-lru'.
                      The data items eviction policy (either: 'allkeys-lru', 'allkeys-lfu', 'allkeys-random', 'volatile-lru', 'volatile-lfu', 'volatile-random', 'volatile-ttl' or 'noeviction'. Default: 'volatile-lru')
                    type: string
                  dataPersistence:
                    description: |-
                      Rate of database data persistence (in persistent storage). Either: 'none', 'aof-every-1-second', 'aof-every-write', 'snapshot-every-1-hour', 'snapshot-every-6-hours' or 'snapshot-every-12-hours'.
                      Rate of database data persistence (in persistent storage).
                    type: string
                  enableDatabaseClustering:
                    description: |-
                      Only used with Pay-As-You-Go databases. Distributes database data to different cloud instances. Default false.
                      Distributes database data to different cloud instances
                    type: boolean
                  enableDefaultUser:
                    description: |-
                      When true enables connecting to the database with the default user. Default true. If set to false, any value for password will be ignored.
                      When 'true', enables connecting to the database with the 'default' user. Default: 'true'
                    type: boolean
                  enablePaygFeatures:
                    description: |-
                      Whether to enable features restricted to Pay-As-You-Go legacy databases. It is not supported for new databases. Default false.
                      Enable features for PAYG databases
                    type: boolean
                  enableTls:
                    description: |-
                      Only used with Pay-As-You-Go databases. Use TLS for authentication. Default false.
                      Use TLS for authentication
                    type: boolean
                  externalEndpointForOssClusterApi:
                    description: |-
                      Only used with Pay-As-You-Go databases. Should use the external endpoint for open-source (OSS) Cluster API. Default false.
                      Should use the external endpoint for open-source (OSS) Cluster API
                    type: boolean
                  memoryLimitInGb:
                    description: |-
                      Only used with Pay-As-You-Go databases. Maximum memory usage for the database.
                      Maximum memory usage for this specific database
                    type: number
                  modules:
                    description: |-
                      A list of modules objects, documented below. Modifying this attribute will force creation of a new resource.
                      Modules to be provisioned in the database
                    items:
                      properties:
                        name:
                          description: A meaningful name to identify the database.
                          type: string
                      type: object
                    type: array
                  name:
                    description: |-
                      A meaningful name to identify the database.
                      A meaningful name to identify the database
                    type: string
                  passwordSecretRef:
                    description: |-
                      Password to access the database. If not specified, a random 32 character long alphanumeric password will be automatically generated.
                      Password used to access the database. If left empty, the password will be generated automatically
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  periodicBackupPath:
                    description: |-
                      If specified, automatic backups will be every 24 hours and immediate backups to this path will be allowed upon request.
                      Path that will be used to store database backup files
                    type: string
                  protocol:
                    description: |-
                      Database protocol. 'stack' is a suite of all Redis' data modules. Default: 'stack'. Either: 'redis', 'memcached' or 'stack'. 'redis' is only used with Pay-As-You-Go databases.
                      The protocol that will be used to access the database, (either 'redis', 'memcached' or 'stack')
                    type: string
                  regexRules:
                    description: |-
                      Only used with Pay-As-You-Go databases. Shard regex rules. Relevant only for a sharded database.
                      Shard regex rules. Relevant only for a sharded database. Supported only for 'Pay-As-You-Go' subscriptions
                    items:
                      type: string
                    type: array
                  replica:
                    description: |-
                      If specified, this database will be a replica of the specified Redis databases provided, documented below.
                      Details of database replication
                    items:
                      properties:
                        syncSource:
                          description: |-
                            The sources to replicate. Documented below.
                            A source database to replicate here
                          items:
                            properties:
                              encryption:
                                description: |-
                                  Defines if encryption should be used to connect to the sync source.
                                  Defines if encryption should be used to connect to the sync source. If not provided and if the source is a Redis Cloud instance, it will automatically detect if the source uses encryption
                                type: boolean
                              endpoint:
                                description: |-
                                  A Redis URI (sample format: 'redis://user:password@host:port)'. If the URI provided is a Redis Cloud instance, only the host and port should be provided (using the format: ['redis://endpoint1:6379', 'redis://endpoint2:6380'] ).
                                  A Redis URI (sample format: 'redis://user:password@host:port)'. If the URI provided is Redis Cloud instance, only host and port should be provided (using the format: ['redis://endpoint1:6379', 'redis://endpoint2:6380'])
                                type: string
                              serverCert:
                                description: |-
                                  TLS certificate chain of the sync source.
                                  TLS/SSL certificate chain of the sync source. If left null and if the source is a Redis Cloud instance, it will automatically detect the certificate to use
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  replication:
                    description: |-
                      Databases replication. Either: 'true' or 'false'.
                      Database's replication
                    type: boolean
                  respVersion:
                    description: |-
                      RESP version must be compatible with the Redis version.
                      RESP version must be compatible with Redis version.
                    type: string
                  sourceIps:
                    description: |-
                      List of source IP addresses or subnet masks. If specified, Redis clients will be able to connect to this database only from within the specified source IP address ranges. Example value: ['192.168.10.0/32', '192.168.12.0/24'].
                      Set of CIDR addresses to allow access to the database
                    items:
                      type: string
                    type: array
                  subscriptionId:
                    description: |-
                      The ID of the subscription to create the database in. Modifying this attribute will force creation of a new resource.
                      Identifier of the essentials subscription
                    type: number
                  supportOssClusterApi:
                    description: |-
                      Only used with Pay-As-You-Go databases. Support Redis open-source (OSS) Cluster API. Default false.
                      Support Redis open-source (OSS) Cluster API
                    type: boolean
                  tags:
                    additionalProperties:
                      type: string
                    description: |-
                      A string/string map of tags to associate with this database. Note that all keys and values must be lowercase.
                      Tags for database management
                    type: object
                    x-kubernetes-map-type: granular
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.dataPersistence is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.dataPersistence)
                || (has(self.initProvider) && has(self.initProvider.dataPersistence))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.replication is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.replication)
                || (has(self.initProvider) && has(self.initProvider.replication))'
            - message: spec.forProvider.subscriptionId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.subscriptionId)
                || (has(self.initProvider) && has(self.initProvider.subscriptionId))'
          status:
            description: DatabaseStatus defines the observed state of Database.
            properties:
              atProvider:
                properties:
                  activatedOn:
                    description: |-
                      When this database was activated.
                      When this database was activated
                    type: string
                  alert:
                    description: |-
                      A block defining Redis database alert. Can be specified multiple times. Documented below.
                      Set of alerts to enable on the database
                    items:
                      properties:
                        name:
                          description: |-
                            The alert name.
                            Alert name
                          type: string
                        value:
                          description: |-
                            The alert value.
                            Alert value
                          type: number
                      type: object
                    type: array
                  clientTlsCertificates:
                    description: A list of TLS/SSL certificates (public keys) with
                      new line characters replaced by \n.
                    items:
                      type: string
                    type: array
                  cloudProvider:
                    description: |-
                      The Cloud Provider hosting this database.
                      The Cloud Provider hosting this database
                    type: string
                  dataEviction:
                    description: |-
                      Data items eviction method. Either: 'allkeys-lru', 'allkeys-lfu', 'allkeys-random', 'volatile-lru', 'volatile-lfu', 'volatile-random', 'volatile-ttl' or 'noeviction'. Default: 'volatile-lru'.
                      The data items eviction policy (either: 'allkeys-lru', 'allkeys-lfu', 'allkeys-random', 'volatile-lru', 'volatile-lfu', 'volatile-random', 'volatile-ttl' or 'noeviction'. Default: 'volatile-lru')
                    type: string
                  dataPersistence:
                    description: |-
                      Rate of database data persistence (in persistent storage). Either: 'none', 'aof-every-1-second', 'aof-every-write', 'snapshot-every-1-hour', 'snapshot-every-6-hours' or 'snapshot-every-12-hours'.
                      Rate of database data persistence (in persistent storage).
                    type: string
                  dbId:
                    description: Identifier of the database created
                    type: number
                  enableDatabaseClustering:
                    description: |-
                      Only used with Pay-As-You-Go databases. Distributes database data to different cloud instances. Default false.
                      Distributes database data to different cloud instances
                    type: boolean
                  enableDefaultUser:
                    description: |-
                      When true enables connecting to the database with the default user. Default true. If set to false, any value for password will be ignored.
                      When 'true', enables connecting to the database with the 'default' user. Default: 'true'
                    type: boolean
                  enablePaygFeatures:
                    description: |-
                      Whether to enable features restricted to Pay-As-You-Go legacy databases. It is not supported for new databases. Default false.
                      Enable features for PAYG databases
                    type: boolean
                  enableTls:
                    description: |-
                      Only used with Pay-As-You-Go databases. Use TLS for authentication. Default false.
                      Use TLS for authentication
                    type: boolean
                  externalEndpointForOssClusterApi:
                    description: |-
                      Only used with Pay-As-You-Go databases. Should use the external endpoint for open-source (OSS) Cluster API. Default false.
                      Should use the external endpoint for open-source (OSS) Cluster API
                    type: boolean
                  id:
                    type: string
                  memoryLimitInGb:
                    description: |-
                      Only used with Pay-As-You-Go databases. Maximum memory usage for the database.
                      Maximum memory usage for this specific database
                    type: number
                  modules:
                    description: |-
                      A list of modules objects, documented below. Modifying this attribute will force creation of a new resource.
                      Modules to be provisioned in the database
                    items:
                      properties:
                        name:
                          description: A meaningful name to identify the database.
                          type: string
                      type: object
                    type: array
                  name:
                    description: |-
                      A meaningful name to identify the database.
                      A meaningful name to identify the database
                    type: string
                  periodicBackupPath:
                    description: |-
                      If specified, automatic backups will be every 24 hours and immediate backups to this path will be allowed upon request.
                      Path that will be used to store database backup files
                    type: string
                  privateEndpoint:
                    description: |-
                      Private endpoint to access the database.
                      Private endpoint to access the database
                    type: string
                  protocol:
                    description: |-
                      Database protocol. 'stack' is a suite of all Redis' data modules. Default: 'stack'. Either: 'redis', 'memcached' or 'stack'. 'redis' is only used with Pay-As-You-Go databases.
                      The protocol that will be used to access the database, (either 'redis', 'memcached' or 'stack')
                    type: string
                  publicEndpoint:
                    description: |-
                      Public endpoint to access the database.
                      Public endpoint to access the database
                    type: string
                  redisVersionCompliance:
                    description: |-
                      The compliance Redis version of the database.
                      The compliance level (redis version) of this database
                    type: string
                  regexRules:
                    description: |-
                      Only used with Pay-As-You-Go databases. Shard regex rules. Relevant only for a sharded database.
                      Shard regex rules. Relevant only for a sharded database. Supported only for 'Pay-As-You-Go' subscriptions
                    items:
                      type: string
                    type: array
                  region:
                    description: |-
                      The region within the Cloud Provider where this database is hosted.
                      The region within the Cloud Provider where this database is hosted
                    type: string
                  replica:
                    description: |-
                      If specified, this database will be a replica of the specified Redis databases provided, documented below.
                      Details of database replication
                    items:
                      properties:
                        syncSource:
                          description: |-
                            The sources to replicate. Documented below.
                            A source database to replicate here
                          items:
                            properties:
                              encryption:
                                description: |-
                                  Defines if encryption should be used to connect to the sync source.
                                  Defines if encryption should be used to connect to the sync source. If not provided and if the source is a Redis Cloud instance, it will automatically detect if the source uses encryption
                                type: boolean
                              endpoint:
                                description: |-
                                  A Redis URI (sample format: 'redis://user:password@host:port)'. If the URI provided is a Redis Cloud instance, only the host and port should be provided (using the format: ['redis://endpoint1:6379', 'redis://endpoint2:6380'] ).
                                  A Redis URI (sample format: 'redis://user:password@host:port)'. If the URI provided is Redis Cloud instance, only host and port should be provided (using the format: ['redis://endpoint1:6379', 'redis://endpoint2:6380'])
                                type: string
                              serverCert:
                                description: |-
                                  TLS certificate chain of the sync source.
                                  TLS/SSL certificate chain of the sync source. If left null and if the source is a Redis Cloud instance, it will automatically detect the certificate to use
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  replication:
                    description: |-
                      Databases replication. Either: 'true' or 'false'.
                      Database's replication
                    type: boolean
                  respVersion:
                    description: |-
                      RESP version must be compatible with the Redis version.
                      RESP version must be compatible with Redis version.
                    type: string
                  sourceIps:
                    description: |-
                      List of source IP addresses or subnet masks. If specified, Redis clients will be able to connect to this database only from within the specified source IP address ranges. Example value: ['192.168.10.0/32', '192.168.12.0/24'].
                      Set of CIDR addresses to allow access to the database
                    items:
                      type: string
                    type: array
                  subscriptionId:
                    description: |-
                      The ID of the subscription to create the database in. Modifying this attribute will force creation of a new resource.
                      Identifier of the essentials subscription
                    type: number
                  supportOssClusterApi:
                    description: |-
                      Only used with Pay-As-You-Go databases. Support Redis open-source (OSS) Cluster API. Default false.
                      Support Redis open-source (OSS) Cluster API
                    type: boolean
                  tags:
                    additionalProperties:
                      type: string
                    description: |-
                      A string/string map of tags to associate with this database. Note that all keys and values must be lowercase.
                      Tags for database management
                    type: object
                    x-kubernetes-map-type: granular
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
