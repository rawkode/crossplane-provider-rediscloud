// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ActiveSubscriptionDatabaseInitParameters struct {

	// SSL certificate to authenticate user connections.
	ClientSSLCertificate *string `json:"clientSslCertificate,omitempty" tf:"client_ssl_certificate,omitempty"`

	// A list of TLS certificates to authenticate user connections, conflicts with client_ssl_certificate
	// TLS certificates to authenticate user connections
	ClientTLSCertificates []*string `json:"clientTlsCertificates,omitempty" tf:"client_tls_certificates,omitempty"`

	// The data items eviction policy (either: 'allkeys-lru', 'allkeys-lfu', 'allkeys-random', 'volatile-lru', 'volatile-lfu', 'volatile-random', 'volatile-ttl' or 'noeviction'. Default: 'volatile-lru')
	// Data eviction items policy
	DataEviction *string `json:"dataEviction,omitempty" tf:"data_eviction,omitempty"`

	// is unset
	// Maximum amount of data in the dataset for this specific database in GB
	DatasetSizeInGb *float64 `json:"datasetSizeInGb,omitempty" tf:"dataset_size_in_gb,omitempty"`

	// Use TLS for authentication. Default: ‘false’
	// client_ssl_certificate -  SSL certificate to authenticate user connections, conflicts with client_tls_certificates
	// Use TLS for authentication.
	EnableTLS *bool `json:"enableTls,omitempty" tf:"enable_tls,omitempty"`

	// Should use the external endpoint for open-source (OSS) Cluster API.
	// Can only be enabled if OSS Cluster API support is enabled. Default: 'false'
	// Should use the external endpoint for open-source (OSS) Cluster API
	ExternalEndpointForOssClusterAPI *bool `json:"externalEndpointForOssClusterApi,omitempty" tf:"external_endpoint_for_oss_cluster_api,omitempty"`

	// A block defining Redis database alert of regions that don't override global settings, documented below, can be specified multiple times. (either: 'dataset-size', 'datasets-size', 'throughput-higher-than', 'throughput-lower-than', 'latency', 'syncsource-error', 'syncsource-lag' or 'connections-limit')
	// Set of alerts to enable on the database
	GlobalAlert []GlobalAlertInitParameters `json:"globalAlert,omitempty" tf:"global_alert,omitempty"`

	// Global rate of database data persistence (in persistent storage) of regions that dont override global settings. Default: 'none'
	// Rate of database data persistence (in persistent storage)
	GlobalDataPersistence *string `json:"globalDataPersistence,omitempty" tf:"global_data_persistence,omitempty"`

	// A list of modules to be enabled on all deployments of this database. Supported modules: RedisJSON, RediSearch. Ignored after database creation.
	// List of modules to enable on the database. This information is only used when creating a new database and any changes will be ignored after this.
	GlobalModules []*string `json:"globalModules,omitempty" tf:"global_modules,omitempty"`

	// Password to access the database of regions that don't override global settings. If left empty, the password will be generated automatically
	// Password used to access the database. If left empty, the password will be generated automatically
	GlobalPasswordSecretRef *v1.SecretKeySelector `json:"globalPasswordSecretRef,omitempty" tf:"-"`

	// Either 'resp2' or 'resp3'. Resp version for Crdb databases within the AA database. Must be compatible with Redis version.
	// The initial RESP version for all databases provisioned under this AA database. This information is only used when creating a new database and any changes will be ignored after this.
	GlobalRespVersion *string `json:"globalRespVersion,omitempty" tf:"global_resp_version,omitempty"`

	// List of source IP addresses or subnet masks of regions that don't override global settings. If specified, Redis clients will be able to connect to this database only from within the specified source IP addresses ranges (example: ['192.168.10.0/32', '192.168.12.0/24'])
	// Set of CIDR addresses to allow access to the database
	// +listType=set
	GlobalSourceIps []*string `json:"globalSourceIps,omitempty" tf:"global_source_ips,omitempty"`

	// Maximum memory usage for this specific database, including replication and other overhead Deprecated in favor of
	// (Deprecated) Maximum memory usage for this specific database
	MemoryLimitInGb *float64 `json:"memoryLimitInGb,omitempty" tf:"memory_limit_in_gb,omitempty"`

	// A meaningful name to identify the database. Modifying this attribute will force creation of a new resource.
	// A meaningful name to identify the database
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Override region specific configuration, documented below
	// Region-specific configuration parameters to override the global configuration
	OverrideRegion []OverrideRegionInitParameters `json:"overrideRegion,omitempty" tf:"override_region,omitempty"`

	// TCP port on which the database is available - must be between 10000 and 19999. Modifying this attribute will force creation of a new resource.
	// TCP port on which the database is available
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Active subscription to create the database in. Modifying this attribute will force creation of a new resource.
	// Identifier of the subscription
	SubscriptionID *float64 `json:"subscriptionId,omitempty" tf:"subscription_id,omitempty"`

	// Support Redis open-source (OSS) Cluster API. Default: ‘false’
	// Support Redis open-source (OSS) Cluster API
	SupportOssClusterAPI *bool `json:"supportOssClusterApi,omitempty" tf:"support_oss_cluster_api,omitempty"`

	// A string/string map of tags to associate with this database. Note that all keys and values must be lowercase.
	// Tags for database management
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type ActiveSubscriptionDatabaseObservation struct {

	// SSL certificate to authenticate user connections.
	ClientSSLCertificate *string `json:"clientSslCertificate,omitempty" tf:"client_ssl_certificate,omitempty"`

	// A list of TLS certificates to authenticate user connections, conflicts with client_ssl_certificate
	// TLS certificates to authenticate user connections
	ClientTLSCertificates []*string `json:"clientTlsCertificates,omitempty" tf:"client_tls_certificates,omitempty"`

	// Identifier of the database created
	// Identifier of the database created
	DBID *float64 `json:"dbId,omitempty" tf:"db_id,omitempty"`

	// The data items eviction policy (either: 'allkeys-lru', 'allkeys-lfu', 'allkeys-random', 'volatile-lru', 'volatile-lfu', 'volatile-random', 'volatile-ttl' or 'noeviction'. Default: 'volatile-lru')
	// Data eviction items policy
	DataEviction *string `json:"dataEviction,omitempty" tf:"data_eviction,omitempty"`

	// is unset
	// Maximum amount of data in the dataset for this specific database in GB
	DatasetSizeInGb *float64 `json:"datasetSizeInGb,omitempty" tf:"dataset_size_in_gb,omitempty"`

	// Use TLS for authentication. Default: ‘false’
	// client_ssl_certificate -  SSL certificate to authenticate user connections, conflicts with client_tls_certificates
	// Use TLS for authentication.
	EnableTLS *bool `json:"enableTls,omitempty" tf:"enable_tls,omitempty"`

	// Should use the external endpoint for open-source (OSS) Cluster API.
	// Can only be enabled if OSS Cluster API support is enabled. Default: 'false'
	// Should use the external endpoint for open-source (OSS) Cluster API
	ExternalEndpointForOssClusterAPI *bool `json:"externalEndpointForOssClusterApi,omitempty" tf:"external_endpoint_for_oss_cluster_api,omitempty"`

	// A block defining Redis database alert of regions that don't override global settings, documented below, can be specified multiple times. (either: 'dataset-size', 'datasets-size', 'throughput-higher-than', 'throughput-lower-than', 'latency', 'syncsource-error', 'syncsource-lag' or 'connections-limit')
	// Set of alerts to enable on the database
	GlobalAlert []GlobalAlertObservation `json:"globalAlert,omitempty" tf:"global_alert,omitempty"`

	// Global rate of database data persistence (in persistent storage) of regions that dont override global settings. Default: 'none'
	// Rate of database data persistence (in persistent storage)
	GlobalDataPersistence *string `json:"globalDataPersistence,omitempty" tf:"global_data_persistence,omitempty"`

	// A list of modules to be enabled on all deployments of this database. Supported modules: RedisJSON, RediSearch. Ignored after database creation.
	// List of modules to enable on the database. This information is only used when creating a new database and any changes will be ignored after this.
	GlobalModules []*string `json:"globalModules,omitempty" tf:"global_modules,omitempty"`

	// Either 'resp2' or 'resp3'. Resp version for Crdb databases within the AA database. Must be compatible with Redis version.
	// The initial RESP version for all databases provisioned under this AA database. This information is only used when creating a new database and any changes will be ignored after this.
	GlobalRespVersion *string `json:"globalRespVersion,omitempty" tf:"global_resp_version,omitempty"`

	// List of source IP addresses or subnet masks of regions that don't override global settings. If specified, Redis clients will be able to connect to this database only from within the specified source IP addresses ranges (example: ['192.168.10.0/32', '192.168.12.0/24'])
	// Set of CIDR addresses to allow access to the database
	// +listType=set
	GlobalSourceIps []*string `json:"globalSourceIps,omitempty" tf:"global_source_ips,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Maximum memory usage for this specific database, including replication and other overhead Deprecated in favor of
	// (Deprecated) Maximum memory usage for this specific database
	MemoryLimitInGb *float64 `json:"memoryLimitInGb,omitempty" tf:"memory_limit_in_gb,omitempty"`

	// A meaningful name to identify the database. Modifying this attribute will force creation of a new resource.
	// A meaningful name to identify the database
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Override region specific configuration, documented below
	// Region-specific configuration parameters to override the global configuration
	OverrideRegion []OverrideRegionObservation `json:"overrideRegion,omitempty" tf:"override_region,omitempty"`

	// TCP port on which the database is available - must be between 10000 and 19999. Modifying this attribute will force creation of a new resource.
	// TCP port on which the database is available
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// A map of which private endpoints can to access the database per region, uses region name as key.
	// Region public and private endpoints to access the database
	// +mapType=granular
	PrivateEndpoint map[string]*string `json:"privateEndpoint,omitempty" tf:"private_endpoint,omitempty"`

	// A map of which public endpoints can to access the database per region, uses region name as key.
	// Region public and private endpoints to access the database
	// +mapType=granular
	PublicEndpoint map[string]*string `json:"publicEndpoint,omitempty" tf:"public_endpoint,omitempty"`

	// Active subscription to create the database in. Modifying this attribute will force creation of a new resource.
	// Identifier of the subscription
	SubscriptionID *float64 `json:"subscriptionId,omitempty" tf:"subscription_id,omitempty"`

	// Support Redis open-source (OSS) Cluster API. Default: ‘false’
	// Support Redis open-source (OSS) Cluster API
	SupportOssClusterAPI *bool `json:"supportOssClusterApi,omitempty" tf:"support_oss_cluster_api,omitempty"`

	// A string/string map of tags to associate with this database. Note that all keys and values must be lowercase.
	// Tags for database management
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type ActiveSubscriptionDatabaseParameters struct {

	// SSL certificate to authenticate user connections.
	// +kubebuilder:validation:Optional
	ClientSSLCertificate *string `json:"clientSslCertificate,omitempty" tf:"client_ssl_certificate,omitempty"`

	// A list of TLS certificates to authenticate user connections, conflicts with client_ssl_certificate
	// TLS certificates to authenticate user connections
	// +kubebuilder:validation:Optional
	ClientTLSCertificates []*string `json:"clientTlsCertificates,omitempty" tf:"client_tls_certificates,omitempty"`

	// The data items eviction policy (either: 'allkeys-lru', 'allkeys-lfu', 'allkeys-random', 'volatile-lru', 'volatile-lfu', 'volatile-random', 'volatile-ttl' or 'noeviction'. Default: 'volatile-lru')
	// Data eviction items policy
	// +kubebuilder:validation:Optional
	DataEviction *string `json:"dataEviction,omitempty" tf:"data_eviction,omitempty"`

	// is unset
	// Maximum amount of data in the dataset for this specific database in GB
	// +kubebuilder:validation:Optional
	DatasetSizeInGb *float64 `json:"datasetSizeInGb,omitempty" tf:"dataset_size_in_gb,omitempty"`

	// Use TLS for authentication. Default: ‘false’
	// client_ssl_certificate -  SSL certificate to authenticate user connections, conflicts with client_tls_certificates
	// Use TLS for authentication.
	// +kubebuilder:validation:Optional
	EnableTLS *bool `json:"enableTls,omitempty" tf:"enable_tls,omitempty"`

	// Should use the external endpoint for open-source (OSS) Cluster API.
	// Can only be enabled if OSS Cluster API support is enabled. Default: 'false'
	// Should use the external endpoint for open-source (OSS) Cluster API
	// +kubebuilder:validation:Optional
	ExternalEndpointForOssClusterAPI *bool `json:"externalEndpointForOssClusterApi,omitempty" tf:"external_endpoint_for_oss_cluster_api,omitempty"`

	// A block defining Redis database alert of regions that don't override global settings, documented below, can be specified multiple times. (either: 'dataset-size', 'datasets-size', 'throughput-higher-than', 'throughput-lower-than', 'latency', 'syncsource-error', 'syncsource-lag' or 'connections-limit')
	// Set of alerts to enable on the database
	// +kubebuilder:validation:Optional
	GlobalAlert []GlobalAlertParameters `json:"globalAlert,omitempty" tf:"global_alert,omitempty"`

	// Global rate of database data persistence (in persistent storage) of regions that dont override global settings. Default: 'none'
	// Rate of database data persistence (in persistent storage)
	// +kubebuilder:validation:Optional
	GlobalDataPersistence *string `json:"globalDataPersistence,omitempty" tf:"global_data_persistence,omitempty"`

	// A list of modules to be enabled on all deployments of this database. Supported modules: RedisJSON, RediSearch. Ignored after database creation.
	// List of modules to enable on the database. This information is only used when creating a new database and any changes will be ignored after this.
	// +kubebuilder:validation:Optional
	GlobalModules []*string `json:"globalModules,omitempty" tf:"global_modules,omitempty"`

	// Password to access the database of regions that don't override global settings. If left empty, the password will be generated automatically
	// Password used to access the database. If left empty, the password will be generated automatically
	// +kubebuilder:validation:Optional
	GlobalPasswordSecretRef *v1.SecretKeySelector `json:"globalPasswordSecretRef,omitempty" tf:"-"`

	// Either 'resp2' or 'resp3'. Resp version for Crdb databases within the AA database. Must be compatible with Redis version.
	// The initial RESP version for all databases provisioned under this AA database. This information is only used when creating a new database and any changes will be ignored after this.
	// +kubebuilder:validation:Optional
	GlobalRespVersion *string `json:"globalRespVersion,omitempty" tf:"global_resp_version,omitempty"`

	// List of source IP addresses or subnet masks of regions that don't override global settings. If specified, Redis clients will be able to connect to this database only from within the specified source IP addresses ranges (example: ['192.168.10.0/32', '192.168.12.0/24'])
	// Set of CIDR addresses to allow access to the database
	// +kubebuilder:validation:Optional
	// +listType=set
	GlobalSourceIps []*string `json:"globalSourceIps,omitempty" tf:"global_source_ips,omitempty"`

	// Maximum memory usage for this specific database, including replication and other overhead Deprecated in favor of
	// (Deprecated) Maximum memory usage for this specific database
	// +kubebuilder:validation:Optional
	MemoryLimitInGb *float64 `json:"memoryLimitInGb,omitempty" tf:"memory_limit_in_gb,omitempty"`

	// A meaningful name to identify the database. Modifying this attribute will force creation of a new resource.
	// A meaningful name to identify the database
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Override region specific configuration, documented below
	// Region-specific configuration parameters to override the global configuration
	// +kubebuilder:validation:Optional
	OverrideRegion []OverrideRegionParameters `json:"overrideRegion,omitempty" tf:"override_region,omitempty"`

	// TCP port on which the database is available - must be between 10000 and 19999. Modifying this attribute will force creation of a new resource.
	// TCP port on which the database is available
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Active subscription to create the database in. Modifying this attribute will force creation of a new resource.
	// Identifier of the subscription
	// +kubebuilder:validation:Optional
	SubscriptionID *float64 `json:"subscriptionId,omitempty" tf:"subscription_id,omitempty"`

	// Support Redis open-source (OSS) Cluster API. Default: ‘false’
	// Support Redis open-source (OSS) Cluster API
	// +kubebuilder:validation:Optional
	SupportOssClusterAPI *bool `json:"supportOssClusterApi,omitempty" tf:"support_oss_cluster_api,omitempty"`

	// A string/string map of tags to associate with this database. Note that all keys and values must be lowercase.
	// Tags for database management
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type GlobalAlertInitParameters struct {

	// Alert name
	// Alert name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Alert value
	// Alert value
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type GlobalAlertObservation struct {

	// Alert name
	// Alert name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Alert value
	// Alert value
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type GlobalAlertParameters struct {

	// Alert name
	// Alert name
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Alert value
	// Alert value
	// +kubebuilder:validation:Optional
	Value *float64 `json:"value" tf:"value,omitempty"`
}

type OverrideGlobalAlertInitParameters struct {

	// Alert name
	// Alert name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Alert value
	// Alert value
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type OverrideGlobalAlertObservation struct {

	// Alert name
	// Alert name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Alert value
	// Alert value
	Value *float64 `json:"value,omitempty" tf:"value,omitempty"`
}

type OverrideGlobalAlertParameters struct {

	// Alert name
	// Alert name
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Alert value
	// Alert value
	// +kubebuilder:validation:Optional
	Value *float64 `json:"value" tf:"value,omitempty"`
}

type OverrideRegionInitParameters struct {

	// Region name.
	// Region name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// A block defining Redis regional instance of an Active-Active database alert, documented below, can be specified multiple times
	// Set of alerts to enable on the database
	OverrideGlobalAlert []OverrideGlobalAlertInitParameters `json:"overrideGlobalAlert,omitempty" tf:"override_global_alert,omitempty"`

	// Regional instance of an Active-Active database data persistence rate (in persistent storage)
	// Rate of database data persistence (in persistent storage)
	OverrideGlobalDataPersistence *string `json:"overrideGlobalDataPersistence,omitempty" tf:"override_global_data_persistence,omitempty"`

	// If specified, this regional instance of an Active-Active database password will be used to access the database
	// Password used to access the database. If left empty, the password will be generated automatically
	OverrideGlobalPasswordSecretRef *v1.SecretKeySelector `json:"overrideGlobalPasswordSecretRef,omitempty" tf:"-"`

	// List of regional instance of an Active-Active database source IP addresses or subnet masks. If specified, Redis clients will be able to connect to this database only from within the specified source IP addresses ranges (example: ['192.168.10.0/32', '192.168.12.0/24'] )
	// Set of CIDR addresses to allow access to the database
	// +listType=set
	OverrideGlobalSourceIps []*string `json:"overrideGlobalSourceIps,omitempty" tf:"override_global_source_ips,omitempty"`

	// Specifies the backup options for the database in this region, documented below
	// An object that specifies the backup options for the database in this region
	RemoteBackup []RemoteBackupInitParameters `json:"remoteBackup,omitempty" tf:"remote_backup,omitempty"`
}

type OverrideRegionObservation struct {

	// Region name.
	// Region name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// A block defining Redis regional instance of an Active-Active database alert, documented below, can be specified multiple times
	// Set of alerts to enable on the database
	OverrideGlobalAlert []OverrideGlobalAlertObservation `json:"overrideGlobalAlert,omitempty" tf:"override_global_alert,omitempty"`

	// Regional instance of an Active-Active database data persistence rate (in persistent storage)
	// Rate of database data persistence (in persistent storage)
	OverrideGlobalDataPersistence *string `json:"overrideGlobalDataPersistence,omitempty" tf:"override_global_data_persistence,omitempty"`

	// List of regional instance of an Active-Active database source IP addresses or subnet masks. If specified, Redis clients will be able to connect to this database only from within the specified source IP addresses ranges (example: ['192.168.10.0/32', '192.168.12.0/24'] )
	// Set of CIDR addresses to allow access to the database
	// +listType=set
	OverrideGlobalSourceIps []*string `json:"overrideGlobalSourceIps,omitempty" tf:"override_global_source_ips,omitempty"`

	// Specifies the backup options for the database in this region, documented below
	// An object that specifies the backup options for the database in this region
	RemoteBackup []RemoteBackupObservation `json:"remoteBackup,omitempty" tf:"remote_backup,omitempty"`
}

type OverrideRegionParameters struct {

	// Region name.
	// Region name
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// A block defining Redis regional instance of an Active-Active database alert, documented below, can be specified multiple times
	// Set of alerts to enable on the database
	// +kubebuilder:validation:Optional
	OverrideGlobalAlert []OverrideGlobalAlertParameters `json:"overrideGlobalAlert,omitempty" tf:"override_global_alert,omitempty"`

	// Regional instance of an Active-Active database data persistence rate (in persistent storage)
	// Rate of database data persistence (in persistent storage)
	// +kubebuilder:validation:Optional
	OverrideGlobalDataPersistence *string `json:"overrideGlobalDataPersistence,omitempty" tf:"override_global_data_persistence,omitempty"`

	// If specified, this regional instance of an Active-Active database password will be used to access the database
	// Password used to access the database. If left empty, the password will be generated automatically
	// +kubebuilder:validation:Optional
	OverrideGlobalPasswordSecretRef *v1.SecretKeySelector `json:"overrideGlobalPasswordSecretRef,omitempty" tf:"-"`

	// List of regional instance of an Active-Active database source IP addresses or subnet masks. If specified, Redis clients will be able to connect to this database only from within the specified source IP addresses ranges (example: ['192.168.10.0/32', '192.168.12.0/24'] )
	// Set of CIDR addresses to allow access to the database
	// +kubebuilder:validation:Optional
	// +listType=set
	OverrideGlobalSourceIps []*string `json:"overrideGlobalSourceIps,omitempty" tf:"override_global_source_ips,omitempty"`

	// Specifies the backup options for the database in this region, documented below
	// An object that specifies the backup options for the database in this region
	// +kubebuilder:validation:Optional
	RemoteBackup []RemoteBackupParameters `json:"remoteBackup,omitempty" tf:"remote_backup,omitempty"`
}

type RemoteBackupInitParameters struct {

	// Defines the interval between backups. Should be in the following format 'every-x-hours'. x is one of [24,12,6,4,2,1]. For example: 'every-4-hours'
	// Defines the frequency of the automatic backup
	Interval *string `json:"interval,omitempty" tf:"interval,omitempty"`

	// Defines a URI representing the backup storage location
	// Defines a URI representing the backup storage location
	StoragePath *string `json:"storagePath,omitempty" tf:"storage_path,omitempty"`

	// Defines the provider of the storage location
	// Defines the provider of the storage location
	StorageType *string `json:"storageType,omitempty" tf:"storage_type,omitempty"`

	// Defines the hour automatic backups are made - only applicable when the interval is every-12-hours or every-24-hours. For example: '14:00'
	// Defines the hour automatic backups are made - only applicable when interval is `every-12-hours` or `every-24-hours`
	TimeUtc *string `json:"timeUtc,omitempty" tf:"time_utc,omitempty"`
}

type RemoteBackupObservation struct {

	// Defines the interval between backups. Should be in the following format 'every-x-hours'. x is one of [24,12,6,4,2,1]. For example: 'every-4-hours'
	// Defines the frequency of the automatic backup
	Interval *string `json:"interval,omitempty" tf:"interval,omitempty"`

	// Defines a URI representing the backup storage location
	// Defines a URI representing the backup storage location
	StoragePath *string `json:"storagePath,omitempty" tf:"storage_path,omitempty"`

	// Defines the provider of the storage location
	// Defines the provider of the storage location
	StorageType *string `json:"storageType,omitempty" tf:"storage_type,omitempty"`

	// Defines the hour automatic backups are made - only applicable when the interval is every-12-hours or every-24-hours. For example: '14:00'
	// Defines the hour automatic backups are made - only applicable when interval is `every-12-hours` or `every-24-hours`
	TimeUtc *string `json:"timeUtc,omitempty" tf:"time_utc,omitempty"`
}

type RemoteBackupParameters struct {

	// Defines the interval between backups. Should be in the following format 'every-x-hours'. x is one of [24,12,6,4,2,1]. For example: 'every-4-hours'
	// Defines the frequency of the automatic backup
	// +kubebuilder:validation:Optional
	Interval *string `json:"interval" tf:"interval,omitempty"`

	// Defines a URI representing the backup storage location
	// Defines a URI representing the backup storage location
	// +kubebuilder:validation:Optional
	StoragePath *string `json:"storagePath" tf:"storage_path,omitempty"`

	// Defines the provider of the storage location
	// Defines the provider of the storage location
	// +kubebuilder:validation:Optional
	StorageType *string `json:"storageType" tf:"storage_type,omitempty"`

	// Defines the hour automatic backups are made - only applicable when the interval is every-12-hours or every-24-hours. For example: '14:00'
	// Defines the hour automatic backups are made - only applicable when interval is `every-12-hours` or `every-24-hours`
	// +kubebuilder:validation:Optional
	TimeUtc *string `json:"timeUtc,omitempty" tf:"time_utc,omitempty"`
}

// ActiveSubscriptionDatabaseSpec defines the desired state of ActiveSubscriptionDatabase
type ActiveSubscriptionDatabaseSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ActiveSubscriptionDatabaseParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ActiveSubscriptionDatabaseInitParameters `json:"initProvider,omitempty"`
}

// ActiveSubscriptionDatabaseStatus defines the observed state of ActiveSubscriptionDatabase.
type ActiveSubscriptionDatabaseStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ActiveSubscriptionDatabaseObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ActiveSubscriptionDatabase is the Schema for the ActiveSubscriptionDatabases API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,rediscloud}
type ActiveSubscriptionDatabase struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.subscriptionId) || (has(self.initProvider) && has(self.initProvider.subscriptionId))",message="spec.forProvider.subscriptionId is a required parameter"
	Spec   ActiveSubscriptionDatabaseSpec   `json:"spec"`
	Status ActiveSubscriptionDatabaseStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ActiveSubscriptionDatabaseList contains a list of ActiveSubscriptionDatabases
type ActiveSubscriptionDatabaseList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ActiveSubscriptionDatabase `json:"items"`
}

// Repository type metadata.
var (
	ActiveSubscriptionDatabase_Kind             = "ActiveSubscriptionDatabase"
	ActiveSubscriptionDatabase_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ActiveSubscriptionDatabase_Kind}.String()
	ActiveSubscriptionDatabase_KindAPIVersion   = ActiveSubscriptionDatabase_Kind + "." + CRDGroupVersion.String()
	ActiveSubscriptionDatabase_GroupVersionKind = CRDGroupVersion.WithKind(ActiveSubscriptionDatabase_Kind)
)

func init() {
	SchemeBuilder.Register(&ActiveSubscriptionDatabase{}, &ActiveSubscriptionDatabaseList{})
}
