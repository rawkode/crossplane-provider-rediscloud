//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivePrivateServiceConnect) DeepCopyInto(out *ActivePrivateServiceConnect) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivePrivateServiceConnect.
func (in *ActivePrivateServiceConnect) DeepCopy() *ActivePrivateServiceConnect {
	if in == nil {
		return nil
	}
	out := new(ActivePrivateServiceConnect)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActivePrivateServiceConnect) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivePrivateServiceConnectEndpoint) DeepCopyInto(out *ActivePrivateServiceConnectEndpoint) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivePrivateServiceConnectEndpoint.
func (in *ActivePrivateServiceConnectEndpoint) DeepCopy() *ActivePrivateServiceConnectEndpoint {
	if in == nil {
		return nil
	}
	out := new(ActivePrivateServiceConnectEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActivePrivateServiceConnectEndpoint) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivePrivateServiceConnectEndpointAccepter) DeepCopyInto(out *ActivePrivateServiceConnectEndpointAccepter) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivePrivateServiceConnectEndpointAccepter.
func (in *ActivePrivateServiceConnectEndpointAccepter) DeepCopy() *ActivePrivateServiceConnectEndpointAccepter {
	if in == nil {
		return nil
	}
	out := new(ActivePrivateServiceConnectEndpointAccepter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActivePrivateServiceConnectEndpointAccepter) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivePrivateServiceConnectEndpointAccepterInitParameters) DeepCopyInto(out *ActivePrivateServiceConnectEndpointAccepterInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.PrivateServiceConnectEndpointID != nil {
		in, out := &in.PrivateServiceConnectEndpointID, &out.PrivateServiceConnectEndpointID
		*out = new(float64)
		**out = **in
	}
	if in.PrivateServiceConnectServiceID != nil {
		in, out := &in.PrivateServiceConnectServiceID, &out.PrivateServiceConnectServiceID
		*out = new(float64)
		**out = **in
	}
	if in.RegionID != nil {
		in, out := &in.RegionID, &out.RegionID
		*out = new(float64)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivePrivateServiceConnectEndpointAccepterInitParameters.
func (in *ActivePrivateServiceConnectEndpointAccepterInitParameters) DeepCopy() *ActivePrivateServiceConnectEndpointAccepterInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActivePrivateServiceConnectEndpointAccepterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivePrivateServiceConnectEndpointAccepterList) DeepCopyInto(out *ActivePrivateServiceConnectEndpointAccepterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ActivePrivateServiceConnectEndpointAccepter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivePrivateServiceConnectEndpointAccepterList.
func (in *ActivePrivateServiceConnectEndpointAccepterList) DeepCopy() *ActivePrivateServiceConnectEndpointAccepterList {
	if in == nil {
		return nil
	}
	out := new(ActivePrivateServiceConnectEndpointAccepterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActivePrivateServiceConnectEndpointAccepterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivePrivateServiceConnectEndpointAccepterObservation) DeepCopyInto(out *ActivePrivateServiceConnectEndpointAccepterObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PrivateServiceConnectEndpointID != nil {
		in, out := &in.PrivateServiceConnectEndpointID, &out.PrivateServiceConnectEndpointID
		*out = new(float64)
		**out = **in
	}
	if in.PrivateServiceConnectServiceID != nil {
		in, out := &in.PrivateServiceConnectServiceID, &out.PrivateServiceConnectServiceID
		*out = new(float64)
		**out = **in
	}
	if in.RegionID != nil {
		in, out := &in.RegionID, &out.RegionID
		*out = new(float64)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivePrivateServiceConnectEndpointAccepterObservation.
func (in *ActivePrivateServiceConnectEndpointAccepterObservation) DeepCopy() *ActivePrivateServiceConnectEndpointAccepterObservation {
	if in == nil {
		return nil
	}
	out := new(ActivePrivateServiceConnectEndpointAccepterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivePrivateServiceConnectEndpointAccepterParameters) DeepCopyInto(out *ActivePrivateServiceConnectEndpointAccepterParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.PrivateServiceConnectEndpointID != nil {
		in, out := &in.PrivateServiceConnectEndpointID, &out.PrivateServiceConnectEndpointID
		*out = new(float64)
		**out = **in
	}
	if in.PrivateServiceConnectServiceID != nil {
		in, out := &in.PrivateServiceConnectServiceID, &out.PrivateServiceConnectServiceID
		*out = new(float64)
		**out = **in
	}
	if in.RegionID != nil {
		in, out := &in.RegionID, &out.RegionID
		*out = new(float64)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivePrivateServiceConnectEndpointAccepterParameters.
func (in *ActivePrivateServiceConnectEndpointAccepterParameters) DeepCopy() *ActivePrivateServiceConnectEndpointAccepterParameters {
	if in == nil {
		return nil
	}
	out := new(ActivePrivateServiceConnectEndpointAccepterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivePrivateServiceConnectEndpointAccepterSpec) DeepCopyInto(out *ActivePrivateServiceConnectEndpointAccepterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivePrivateServiceConnectEndpointAccepterSpec.
func (in *ActivePrivateServiceConnectEndpointAccepterSpec) DeepCopy() *ActivePrivateServiceConnectEndpointAccepterSpec {
	if in == nil {
		return nil
	}
	out := new(ActivePrivateServiceConnectEndpointAccepterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivePrivateServiceConnectEndpointAccepterStatus) DeepCopyInto(out *ActivePrivateServiceConnectEndpointAccepterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivePrivateServiceConnectEndpointAccepterStatus.
func (in *ActivePrivateServiceConnectEndpointAccepterStatus) DeepCopy() *ActivePrivateServiceConnectEndpointAccepterStatus {
	if in == nil {
		return nil
	}
	out := new(ActivePrivateServiceConnectEndpointAccepterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivePrivateServiceConnectEndpointInitParameters) DeepCopyInto(out *ActivePrivateServiceConnectEndpointInitParameters) {
	*out = *in
	if in.EndpointConnectionName != nil {
		in, out := &in.EndpointConnectionName, &out.EndpointConnectionName
		*out = new(string)
		**out = **in
	}
	if in.GCPProjectID != nil {
		in, out := &in.GCPProjectID, &out.GCPProjectID
		*out = new(string)
		**out = **in
	}
	if in.GCPVPCName != nil {
		in, out := &in.GCPVPCName, &out.GCPVPCName
		*out = new(string)
		**out = **in
	}
	if in.GCPVPCSubnetName != nil {
		in, out := &in.GCPVPCSubnetName, &out.GCPVPCSubnetName
		*out = new(string)
		**out = **in
	}
	if in.PrivateServiceConnectServiceID != nil {
		in, out := &in.PrivateServiceConnectServiceID, &out.PrivateServiceConnectServiceID
		*out = new(float64)
		**out = **in
	}
	if in.RegionID != nil {
		in, out := &in.RegionID, &out.RegionID
		*out = new(float64)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivePrivateServiceConnectEndpointInitParameters.
func (in *ActivePrivateServiceConnectEndpointInitParameters) DeepCopy() *ActivePrivateServiceConnectEndpointInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActivePrivateServiceConnectEndpointInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivePrivateServiceConnectEndpointList) DeepCopyInto(out *ActivePrivateServiceConnectEndpointList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ActivePrivateServiceConnectEndpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivePrivateServiceConnectEndpointList.
func (in *ActivePrivateServiceConnectEndpointList) DeepCopy() *ActivePrivateServiceConnectEndpointList {
	if in == nil {
		return nil
	}
	out := new(ActivePrivateServiceConnectEndpointList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActivePrivateServiceConnectEndpointList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivePrivateServiceConnectEndpointObservation) DeepCopyInto(out *ActivePrivateServiceConnectEndpointObservation) {
	*out = *in
	if in.EndpointConnectionName != nil {
		in, out := &in.EndpointConnectionName, &out.EndpointConnectionName
		*out = new(string)
		**out = **in
	}
	if in.GCPProjectID != nil {
		in, out := &in.GCPProjectID, &out.GCPProjectID
		*out = new(string)
		**out = **in
	}
	if in.GCPVPCName != nil {
		in, out := &in.GCPVPCName, &out.GCPVPCName
		*out = new(string)
		**out = **in
	}
	if in.GCPVPCSubnetName != nil {
		in, out := &in.GCPVPCSubnetName, &out.GCPVPCSubnetName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PrivateServiceConnectEndpointID != nil {
		in, out := &in.PrivateServiceConnectEndpointID, &out.PrivateServiceConnectEndpointID
		*out = new(float64)
		**out = **in
	}
	if in.PrivateServiceConnectServiceID != nil {
		in, out := &in.PrivateServiceConnectServiceID, &out.PrivateServiceConnectServiceID
		*out = new(float64)
		**out = **in
	}
	if in.RegionID != nil {
		in, out := &in.RegionID, &out.RegionID
		*out = new(float64)
		**out = **in
	}
	if in.ServiceAttachments != nil {
		in, out := &in.ServiceAttachments, &out.ServiceAttachments
		*out = make([]ServiceAttachmentsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivePrivateServiceConnectEndpointObservation.
func (in *ActivePrivateServiceConnectEndpointObservation) DeepCopy() *ActivePrivateServiceConnectEndpointObservation {
	if in == nil {
		return nil
	}
	out := new(ActivePrivateServiceConnectEndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivePrivateServiceConnectEndpointParameters) DeepCopyInto(out *ActivePrivateServiceConnectEndpointParameters) {
	*out = *in
	if in.EndpointConnectionName != nil {
		in, out := &in.EndpointConnectionName, &out.EndpointConnectionName
		*out = new(string)
		**out = **in
	}
	if in.GCPProjectID != nil {
		in, out := &in.GCPProjectID, &out.GCPProjectID
		*out = new(string)
		**out = **in
	}
	if in.GCPVPCName != nil {
		in, out := &in.GCPVPCName, &out.GCPVPCName
		*out = new(string)
		**out = **in
	}
	if in.GCPVPCSubnetName != nil {
		in, out := &in.GCPVPCSubnetName, &out.GCPVPCSubnetName
		*out = new(string)
		**out = **in
	}
	if in.PrivateServiceConnectServiceID != nil {
		in, out := &in.PrivateServiceConnectServiceID, &out.PrivateServiceConnectServiceID
		*out = new(float64)
		**out = **in
	}
	if in.RegionID != nil {
		in, out := &in.RegionID, &out.RegionID
		*out = new(float64)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivePrivateServiceConnectEndpointParameters.
func (in *ActivePrivateServiceConnectEndpointParameters) DeepCopy() *ActivePrivateServiceConnectEndpointParameters {
	if in == nil {
		return nil
	}
	out := new(ActivePrivateServiceConnectEndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivePrivateServiceConnectEndpointSpec) DeepCopyInto(out *ActivePrivateServiceConnectEndpointSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivePrivateServiceConnectEndpointSpec.
func (in *ActivePrivateServiceConnectEndpointSpec) DeepCopy() *ActivePrivateServiceConnectEndpointSpec {
	if in == nil {
		return nil
	}
	out := new(ActivePrivateServiceConnectEndpointSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivePrivateServiceConnectEndpointStatus) DeepCopyInto(out *ActivePrivateServiceConnectEndpointStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivePrivateServiceConnectEndpointStatus.
func (in *ActivePrivateServiceConnectEndpointStatus) DeepCopy() *ActivePrivateServiceConnectEndpointStatus {
	if in == nil {
		return nil
	}
	out := new(ActivePrivateServiceConnectEndpointStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivePrivateServiceConnectInitParameters) DeepCopyInto(out *ActivePrivateServiceConnectInitParameters) {
	*out = *in
	if in.RegionID != nil {
		in, out := &in.RegionID, &out.RegionID
		*out = new(float64)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivePrivateServiceConnectInitParameters.
func (in *ActivePrivateServiceConnectInitParameters) DeepCopy() *ActivePrivateServiceConnectInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActivePrivateServiceConnectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivePrivateServiceConnectList) DeepCopyInto(out *ActivePrivateServiceConnectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ActivePrivateServiceConnect, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivePrivateServiceConnectList.
func (in *ActivePrivateServiceConnectList) DeepCopy() *ActivePrivateServiceConnectList {
	if in == nil {
		return nil
	}
	out := new(ActivePrivateServiceConnectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActivePrivateServiceConnectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivePrivateServiceConnectObservation) DeepCopyInto(out *ActivePrivateServiceConnectObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PrivateServiceConnectServiceID != nil {
		in, out := &in.PrivateServiceConnectServiceID, &out.PrivateServiceConnectServiceID
		*out = new(float64)
		**out = **in
	}
	if in.RegionID != nil {
		in, out := &in.RegionID, &out.RegionID
		*out = new(float64)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivePrivateServiceConnectObservation.
func (in *ActivePrivateServiceConnectObservation) DeepCopy() *ActivePrivateServiceConnectObservation {
	if in == nil {
		return nil
	}
	out := new(ActivePrivateServiceConnectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivePrivateServiceConnectParameters) DeepCopyInto(out *ActivePrivateServiceConnectParameters) {
	*out = *in
	if in.RegionID != nil {
		in, out := &in.RegionID, &out.RegionID
		*out = new(float64)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivePrivateServiceConnectParameters.
func (in *ActivePrivateServiceConnectParameters) DeepCopy() *ActivePrivateServiceConnectParameters {
	if in == nil {
		return nil
	}
	out := new(ActivePrivateServiceConnectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivePrivateServiceConnectSpec) DeepCopyInto(out *ActivePrivateServiceConnectSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivePrivateServiceConnectSpec.
func (in *ActivePrivateServiceConnectSpec) DeepCopy() *ActivePrivateServiceConnectSpec {
	if in == nil {
		return nil
	}
	out := new(ActivePrivateServiceConnectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivePrivateServiceConnectStatus) DeepCopyInto(out *ActivePrivateServiceConnectStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivePrivateServiceConnectStatus.
func (in *ActivePrivateServiceConnectStatus) DeepCopy() *ActivePrivateServiceConnectStatus {
	if in == nil {
		return nil
	}
	out := new(ActivePrivateServiceConnectStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscription) DeepCopyInto(out *ActiveSubscription) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscription.
func (in *ActiveSubscription) DeepCopy() *ActiveSubscription {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActiveSubscription) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionDatabase) DeepCopyInto(out *ActiveSubscriptionDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionDatabase.
func (in *ActiveSubscriptionDatabase) DeepCopy() *ActiveSubscriptionDatabase {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActiveSubscriptionDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionDatabaseInitParameters) DeepCopyInto(out *ActiveSubscriptionDatabaseInitParameters) {
	*out = *in
	if in.ClientSSLCertificate != nil {
		in, out := &in.ClientSSLCertificate, &out.ClientSSLCertificate
		*out = new(string)
		**out = **in
	}
	if in.ClientTLSCertificates != nil {
		in, out := &in.ClientTLSCertificates, &out.ClientTLSCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DataEviction != nil {
		in, out := &in.DataEviction, &out.DataEviction
		*out = new(string)
		**out = **in
	}
	if in.DatasetSizeInGb != nil {
		in, out := &in.DatasetSizeInGb, &out.DatasetSizeInGb
		*out = new(float64)
		**out = **in
	}
	if in.EnableTLS != nil {
		in, out := &in.EnableTLS, &out.EnableTLS
		*out = new(bool)
		**out = **in
	}
	if in.ExternalEndpointForOssClusterAPI != nil {
		in, out := &in.ExternalEndpointForOssClusterAPI, &out.ExternalEndpointForOssClusterAPI
		*out = new(bool)
		**out = **in
	}
	if in.GlobalAlert != nil {
		in, out := &in.GlobalAlert, &out.GlobalAlert
		*out = make([]GlobalAlertInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GlobalDataPersistence != nil {
		in, out := &in.GlobalDataPersistence, &out.GlobalDataPersistence
		*out = new(string)
		**out = **in
	}
	if in.GlobalModules != nil {
		in, out := &in.GlobalModules, &out.GlobalModules
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GlobalPasswordSecretRef != nil {
		in, out := &in.GlobalPasswordSecretRef, &out.GlobalPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.GlobalRespVersion != nil {
		in, out := &in.GlobalRespVersion, &out.GlobalRespVersion
		*out = new(string)
		**out = **in
	}
	if in.GlobalSourceIps != nil {
		in, out := &in.GlobalSourceIps, &out.GlobalSourceIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MemoryLimitInGb != nil {
		in, out := &in.MemoryLimitInGb, &out.MemoryLimitInGb
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OverrideRegion != nil {
		in, out := &in.OverrideRegion, &out.OverrideRegion
		*out = make([]OverrideRegionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(float64)
		**out = **in
	}
	if in.SupportOssClusterAPI != nil {
		in, out := &in.SupportOssClusterAPI, &out.SupportOssClusterAPI
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionDatabaseInitParameters.
func (in *ActiveSubscriptionDatabaseInitParameters) DeepCopy() *ActiveSubscriptionDatabaseInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionDatabaseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionDatabaseList) DeepCopyInto(out *ActiveSubscriptionDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ActiveSubscriptionDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionDatabaseList.
func (in *ActiveSubscriptionDatabaseList) DeepCopy() *ActiveSubscriptionDatabaseList {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActiveSubscriptionDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionDatabaseObservation) DeepCopyInto(out *ActiveSubscriptionDatabaseObservation) {
	*out = *in
	if in.ClientSSLCertificate != nil {
		in, out := &in.ClientSSLCertificate, &out.ClientSSLCertificate
		*out = new(string)
		**out = **in
	}
	if in.ClientTLSCertificates != nil {
		in, out := &in.ClientTLSCertificates, &out.ClientTLSCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DBID != nil {
		in, out := &in.DBID, &out.DBID
		*out = new(float64)
		**out = **in
	}
	if in.DataEviction != nil {
		in, out := &in.DataEviction, &out.DataEviction
		*out = new(string)
		**out = **in
	}
	if in.DatasetSizeInGb != nil {
		in, out := &in.DatasetSizeInGb, &out.DatasetSizeInGb
		*out = new(float64)
		**out = **in
	}
	if in.EnableTLS != nil {
		in, out := &in.EnableTLS, &out.EnableTLS
		*out = new(bool)
		**out = **in
	}
	if in.ExternalEndpointForOssClusterAPI != nil {
		in, out := &in.ExternalEndpointForOssClusterAPI, &out.ExternalEndpointForOssClusterAPI
		*out = new(bool)
		**out = **in
	}
	if in.GlobalAlert != nil {
		in, out := &in.GlobalAlert, &out.GlobalAlert
		*out = make([]GlobalAlertObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GlobalDataPersistence != nil {
		in, out := &in.GlobalDataPersistence, &out.GlobalDataPersistence
		*out = new(string)
		**out = **in
	}
	if in.GlobalModules != nil {
		in, out := &in.GlobalModules, &out.GlobalModules
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GlobalRespVersion != nil {
		in, out := &in.GlobalRespVersion, &out.GlobalRespVersion
		*out = new(string)
		**out = **in
	}
	if in.GlobalSourceIps != nil {
		in, out := &in.GlobalSourceIps, &out.GlobalSourceIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MemoryLimitInGb != nil {
		in, out := &in.MemoryLimitInGb, &out.MemoryLimitInGb
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OverrideRegion != nil {
		in, out := &in.OverrideRegion, &out.OverrideRegion
		*out = make([]OverrideRegionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PrivateEndpoint != nil {
		in, out := &in.PrivateEndpoint, &out.PrivateEndpoint
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PublicEndpoint != nil {
		in, out := &in.PublicEndpoint, &out.PublicEndpoint
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(float64)
		**out = **in
	}
	if in.SupportOssClusterAPI != nil {
		in, out := &in.SupportOssClusterAPI, &out.SupportOssClusterAPI
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionDatabaseObservation.
func (in *ActiveSubscriptionDatabaseObservation) DeepCopy() *ActiveSubscriptionDatabaseObservation {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionDatabaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionDatabaseParameters) DeepCopyInto(out *ActiveSubscriptionDatabaseParameters) {
	*out = *in
	if in.ClientSSLCertificate != nil {
		in, out := &in.ClientSSLCertificate, &out.ClientSSLCertificate
		*out = new(string)
		**out = **in
	}
	if in.ClientTLSCertificates != nil {
		in, out := &in.ClientTLSCertificates, &out.ClientTLSCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DataEviction != nil {
		in, out := &in.DataEviction, &out.DataEviction
		*out = new(string)
		**out = **in
	}
	if in.DatasetSizeInGb != nil {
		in, out := &in.DatasetSizeInGb, &out.DatasetSizeInGb
		*out = new(float64)
		**out = **in
	}
	if in.EnableTLS != nil {
		in, out := &in.EnableTLS, &out.EnableTLS
		*out = new(bool)
		**out = **in
	}
	if in.ExternalEndpointForOssClusterAPI != nil {
		in, out := &in.ExternalEndpointForOssClusterAPI, &out.ExternalEndpointForOssClusterAPI
		*out = new(bool)
		**out = **in
	}
	if in.GlobalAlert != nil {
		in, out := &in.GlobalAlert, &out.GlobalAlert
		*out = make([]GlobalAlertParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GlobalDataPersistence != nil {
		in, out := &in.GlobalDataPersistence, &out.GlobalDataPersistence
		*out = new(string)
		**out = **in
	}
	if in.GlobalModules != nil {
		in, out := &in.GlobalModules, &out.GlobalModules
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GlobalPasswordSecretRef != nil {
		in, out := &in.GlobalPasswordSecretRef, &out.GlobalPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.GlobalRespVersion != nil {
		in, out := &in.GlobalRespVersion, &out.GlobalRespVersion
		*out = new(string)
		**out = **in
	}
	if in.GlobalSourceIps != nil {
		in, out := &in.GlobalSourceIps, &out.GlobalSourceIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MemoryLimitInGb != nil {
		in, out := &in.MemoryLimitInGb, &out.MemoryLimitInGb
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OverrideRegion != nil {
		in, out := &in.OverrideRegion, &out.OverrideRegion
		*out = make([]OverrideRegionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(float64)
		**out = **in
	}
	if in.SupportOssClusterAPI != nil {
		in, out := &in.SupportOssClusterAPI, &out.SupportOssClusterAPI
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionDatabaseParameters.
func (in *ActiveSubscriptionDatabaseParameters) DeepCopy() *ActiveSubscriptionDatabaseParameters {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionDatabaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionDatabaseSpec) DeepCopyInto(out *ActiveSubscriptionDatabaseSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionDatabaseSpec.
func (in *ActiveSubscriptionDatabaseSpec) DeepCopy() *ActiveSubscriptionDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionDatabaseStatus) DeepCopyInto(out *ActiveSubscriptionDatabaseStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionDatabaseStatus.
func (in *ActiveSubscriptionDatabaseStatus) DeepCopy() *ActiveSubscriptionDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionInitParameters) DeepCopyInto(out *ActiveSubscriptionInitParameters) {
	*out = *in
	if in.CloudProvider != nil {
		in, out := &in.CloudProvider, &out.CloudProvider
		*out = new(string)
		**out = **in
	}
	if in.CreationPlan != nil {
		in, out := &in.CreationPlan, &out.CreationPlan
		*out = make([]CreationPlanInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaintenanceWindows != nil {
		in, out := &in.MaintenanceWindows, &out.MaintenanceWindows
		*out = make([]MaintenanceWindowsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PaymentMethod != nil {
		in, out := &in.PaymentMethod, &out.PaymentMethod
		*out = new(string)
		**out = **in
	}
	if in.PaymentMethodID != nil {
		in, out := &in.PaymentMethodID, &out.PaymentMethodID
		*out = new(string)
		**out = **in
	}
	if in.RedisVersion != nil {
		in, out := &in.RedisVersion, &out.RedisVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionInitParameters.
func (in *ActiveSubscriptionInitParameters) DeepCopy() *ActiveSubscriptionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionList) DeepCopyInto(out *ActiveSubscriptionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ActiveSubscription, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionList.
func (in *ActiveSubscriptionList) DeepCopy() *ActiveSubscriptionList {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActiveSubscriptionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionObservation) DeepCopyInto(out *ActiveSubscriptionObservation) {
	*out = *in
	if in.CloudProvider != nil {
		in, out := &in.CloudProvider, &out.CloudProvider
		*out = new(string)
		**out = **in
	}
	if in.CreationPlan != nil {
		in, out := &in.CreationPlan, &out.CreationPlan
		*out = make([]CreationPlanObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceWindows != nil {
		in, out := &in.MaintenanceWindows, &out.MaintenanceWindows
		*out = make([]MaintenanceWindowsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PaymentMethod != nil {
		in, out := &in.PaymentMethod, &out.PaymentMethod
		*out = new(string)
		**out = **in
	}
	if in.PaymentMethodID != nil {
		in, out := &in.PaymentMethodID, &out.PaymentMethodID
		*out = new(string)
		**out = **in
	}
	if in.Pricing != nil {
		in, out := &in.Pricing, &out.Pricing
		*out = make([]PricingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RedisVersion != nil {
		in, out := &in.RedisVersion, &out.RedisVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionObservation.
func (in *ActiveSubscriptionObservation) DeepCopy() *ActiveSubscriptionObservation {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionParameters) DeepCopyInto(out *ActiveSubscriptionParameters) {
	*out = *in
	if in.CloudProvider != nil {
		in, out := &in.CloudProvider, &out.CloudProvider
		*out = new(string)
		**out = **in
	}
	if in.CreationPlan != nil {
		in, out := &in.CreationPlan, &out.CreationPlan
		*out = make([]CreationPlanParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaintenanceWindows != nil {
		in, out := &in.MaintenanceWindows, &out.MaintenanceWindows
		*out = make([]MaintenanceWindowsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PaymentMethod != nil {
		in, out := &in.PaymentMethod, &out.PaymentMethod
		*out = new(string)
		**out = **in
	}
	if in.PaymentMethodID != nil {
		in, out := &in.PaymentMethodID, &out.PaymentMethodID
		*out = new(string)
		**out = **in
	}
	if in.RedisVersion != nil {
		in, out := &in.RedisVersion, &out.RedisVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionParameters.
func (in *ActiveSubscriptionParameters) DeepCopy() *ActiveSubscriptionParameters {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionPeering) DeepCopyInto(out *ActiveSubscriptionPeering) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionPeering.
func (in *ActiveSubscriptionPeering) DeepCopy() *ActiveSubscriptionPeering {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionPeering)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActiveSubscriptionPeering) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionPeeringInitParameters) DeepCopyInto(out *ActiveSubscriptionPeeringInitParameters) {
	*out = *in
	if in.AwsAccountID != nil {
		in, out := &in.AwsAccountID, &out.AwsAccountID
		*out = new(string)
		**out = **in
	}
	if in.DestinationRegion != nil {
		in, out := &in.DestinationRegion, &out.DestinationRegion
		*out = new(string)
		**out = **in
	}
	if in.GCPNetworkName != nil {
		in, out := &in.GCPNetworkName, &out.GCPNetworkName
		*out = new(string)
		**out = **in
	}
	if in.GCPProjectID != nil {
		in, out := &in.GCPProjectID, &out.GCPProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.SourceRegion != nil {
		in, out := &in.SourceRegion, &out.SourceRegion
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.VPCCidr != nil {
		in, out := &in.VPCCidr, &out.VPCCidr
		*out = new(string)
		**out = **in
	}
	if in.VPCCidrs != nil {
		in, out := &in.VPCCidrs, &out.VPCCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionPeeringInitParameters.
func (in *ActiveSubscriptionPeeringInitParameters) DeepCopy() *ActiveSubscriptionPeeringInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionPeeringInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionPeeringList) DeepCopyInto(out *ActiveSubscriptionPeeringList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ActiveSubscriptionPeering, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionPeeringList.
func (in *ActiveSubscriptionPeeringList) DeepCopy() *ActiveSubscriptionPeeringList {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionPeeringList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActiveSubscriptionPeeringList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionPeeringObservation) DeepCopyInto(out *ActiveSubscriptionPeeringObservation) {
	*out = *in
	if in.AwsAccountID != nil {
		in, out := &in.AwsAccountID, &out.AwsAccountID
		*out = new(string)
		**out = **in
	}
	if in.AwsPeeringID != nil {
		in, out := &in.AwsPeeringID, &out.AwsPeeringID
		*out = new(string)
		**out = **in
	}
	if in.DestinationRegion != nil {
		in, out := &in.DestinationRegion, &out.DestinationRegion
		*out = new(string)
		**out = **in
	}
	if in.GCPNetworkName != nil {
		in, out := &in.GCPNetworkName, &out.GCPNetworkName
		*out = new(string)
		**out = **in
	}
	if in.GCPPeeringID != nil {
		in, out := &in.GCPPeeringID, &out.GCPPeeringID
		*out = new(string)
		**out = **in
	}
	if in.GCPProjectID != nil {
		in, out := &in.GCPProjectID, &out.GCPProjectID
		*out = new(string)
		**out = **in
	}
	if in.GCPRedisNetworkName != nil {
		in, out := &in.GCPRedisNetworkName, &out.GCPRedisNetworkName
		*out = new(string)
		**out = **in
	}
	if in.GCPRedisProjectID != nil {
		in, out := &in.GCPRedisProjectID, &out.GCPRedisProjectID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.SourceRegion != nil {
		in, out := &in.SourceRegion, &out.SourceRegion
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.VPCCidr != nil {
		in, out := &in.VPCCidr, &out.VPCCidr
		*out = new(string)
		**out = **in
	}
	if in.VPCCidrs != nil {
		in, out := &in.VPCCidrs, &out.VPCCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionPeeringObservation.
func (in *ActiveSubscriptionPeeringObservation) DeepCopy() *ActiveSubscriptionPeeringObservation {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionPeeringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionPeeringParameters) DeepCopyInto(out *ActiveSubscriptionPeeringParameters) {
	*out = *in
	if in.AwsAccountID != nil {
		in, out := &in.AwsAccountID, &out.AwsAccountID
		*out = new(string)
		**out = **in
	}
	if in.DestinationRegion != nil {
		in, out := &in.DestinationRegion, &out.DestinationRegion
		*out = new(string)
		**out = **in
	}
	if in.GCPNetworkName != nil {
		in, out := &in.GCPNetworkName, &out.GCPNetworkName
		*out = new(string)
		**out = **in
	}
	if in.GCPProjectID != nil {
		in, out := &in.GCPProjectID, &out.GCPProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.SourceRegion != nil {
		in, out := &in.SourceRegion, &out.SourceRegion
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.VPCCidr != nil {
		in, out := &in.VPCCidr, &out.VPCCidr
		*out = new(string)
		**out = **in
	}
	if in.VPCCidrs != nil {
		in, out := &in.VPCCidrs, &out.VPCCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionPeeringParameters.
func (in *ActiveSubscriptionPeeringParameters) DeepCopy() *ActiveSubscriptionPeeringParameters {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionPeeringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionPeeringSpec) DeepCopyInto(out *ActiveSubscriptionPeeringSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionPeeringSpec.
func (in *ActiveSubscriptionPeeringSpec) DeepCopy() *ActiveSubscriptionPeeringSpec {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionPeeringSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionPeeringStatus) DeepCopyInto(out *ActiveSubscriptionPeeringStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionPeeringStatus.
func (in *ActiveSubscriptionPeeringStatus) DeepCopy() *ActiveSubscriptionPeeringStatus {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionPeeringStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionRegions) DeepCopyInto(out *ActiveSubscriptionRegions) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionRegions.
func (in *ActiveSubscriptionRegions) DeepCopy() *ActiveSubscriptionRegions {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionRegions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActiveSubscriptionRegions) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionRegionsInitParameters) DeepCopyInto(out *ActiveSubscriptionRegionsInitParameters) {
	*out = *in
	if in.DeleteRegions != nil {
		in, out := &in.DeleteRegions, &out.DeleteRegions
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = make([]ActiveSubscriptionRegionsRegionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionRegionsInitParameters.
func (in *ActiveSubscriptionRegionsInitParameters) DeepCopy() *ActiveSubscriptionRegionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionRegionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionRegionsList) DeepCopyInto(out *ActiveSubscriptionRegionsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ActiveSubscriptionRegions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionRegionsList.
func (in *ActiveSubscriptionRegionsList) DeepCopy() *ActiveSubscriptionRegionsList {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionRegionsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActiveSubscriptionRegionsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionRegionsObservation) DeepCopyInto(out *ActiveSubscriptionRegionsObservation) {
	*out = *in
	if in.DeleteRegions != nil {
		in, out := &in.DeleteRegions, &out.DeleteRegions
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = make([]ActiveSubscriptionRegionsRegionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionRegionsObservation.
func (in *ActiveSubscriptionRegionsObservation) DeepCopy() *ActiveSubscriptionRegionsObservation {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionRegionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionRegionsParameters) DeepCopyInto(out *ActiveSubscriptionRegionsParameters) {
	*out = *in
	if in.DeleteRegions != nil {
		in, out := &in.DeleteRegions, &out.DeleteRegions
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = make([]ActiveSubscriptionRegionsRegionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionRegionsParameters.
func (in *ActiveSubscriptionRegionsParameters) DeepCopy() *ActiveSubscriptionRegionsParameters {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionRegionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionRegionsRegionInitParameters) DeepCopyInto(out *ActiveSubscriptionRegionsRegionInitParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = make([]DatabaseInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocalRespVersion != nil {
		in, out := &in.LocalRespVersion, &out.LocalRespVersion
		*out = new(string)
		**out = **in
	}
	if in.NetworkingDeploymentCidr != nil {
		in, out := &in.NetworkingDeploymentCidr, &out.NetworkingDeploymentCidr
		*out = new(string)
		**out = **in
	}
	if in.RecreateRegion != nil {
		in, out := &in.RecreateRegion, &out.RecreateRegion
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionRegionsRegionInitParameters.
func (in *ActiveSubscriptionRegionsRegionInitParameters) DeepCopy() *ActiveSubscriptionRegionsRegionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionRegionsRegionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionRegionsRegionObservation) DeepCopyInto(out *ActiveSubscriptionRegionsRegionObservation) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = make([]DatabaseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocalRespVersion != nil {
		in, out := &in.LocalRespVersion, &out.LocalRespVersion
		*out = new(string)
		**out = **in
	}
	if in.NetworkingDeploymentCidr != nil {
		in, out := &in.NetworkingDeploymentCidr, &out.NetworkingDeploymentCidr
		*out = new(string)
		**out = **in
	}
	if in.RecreateRegion != nil {
		in, out := &in.RecreateRegion, &out.RecreateRegion
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RegionID != nil {
		in, out := &in.RegionID, &out.RegionID
		*out = new(float64)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionRegionsRegionObservation.
func (in *ActiveSubscriptionRegionsRegionObservation) DeepCopy() *ActiveSubscriptionRegionsRegionObservation {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionRegionsRegionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionRegionsRegionParameters) DeepCopyInto(out *ActiveSubscriptionRegionsRegionParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = make([]DatabaseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocalRespVersion != nil {
		in, out := &in.LocalRespVersion, &out.LocalRespVersion
		*out = new(string)
		**out = **in
	}
	if in.NetworkingDeploymentCidr != nil {
		in, out := &in.NetworkingDeploymentCidr, &out.NetworkingDeploymentCidr
		*out = new(string)
		**out = **in
	}
	if in.RecreateRegion != nil {
		in, out := &in.RecreateRegion, &out.RecreateRegion
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionRegionsRegionParameters.
func (in *ActiveSubscriptionRegionsRegionParameters) DeepCopy() *ActiveSubscriptionRegionsRegionParameters {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionRegionsRegionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionRegionsSpec) DeepCopyInto(out *ActiveSubscriptionRegionsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionRegionsSpec.
func (in *ActiveSubscriptionRegionsSpec) DeepCopy() *ActiveSubscriptionRegionsSpec {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionRegionsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionRegionsStatus) DeepCopyInto(out *ActiveSubscriptionRegionsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionRegionsStatus.
func (in *ActiveSubscriptionRegionsStatus) DeepCopy() *ActiveSubscriptionRegionsStatus {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionRegionsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionSpec) DeepCopyInto(out *ActiveSubscriptionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionSpec.
func (in *ActiveSubscriptionSpec) DeepCopy() *ActiveSubscriptionSpec {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveSubscriptionStatus) DeepCopyInto(out *ActiveSubscriptionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveSubscriptionStatus.
func (in *ActiveSubscriptionStatus) DeepCopy() *ActiveSubscriptionStatus {
	if in == nil {
		return nil
	}
	out := new(ActiveSubscriptionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveTransitGatewayAttachment) DeepCopyInto(out *ActiveTransitGatewayAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveTransitGatewayAttachment.
func (in *ActiveTransitGatewayAttachment) DeepCopy() *ActiveTransitGatewayAttachment {
	if in == nil {
		return nil
	}
	out := new(ActiveTransitGatewayAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActiveTransitGatewayAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveTransitGatewayAttachmentInitParameters) DeepCopyInto(out *ActiveTransitGatewayAttachmentInitParameters) {
	*out = *in
	if in.Cidrs != nil {
		in, out := &in.Cidrs, &out.Cidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RegionID != nil {
		in, out := &in.RegionID, &out.RegionID
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.TgwID != nil {
		in, out := &in.TgwID, &out.TgwID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveTransitGatewayAttachmentInitParameters.
func (in *ActiveTransitGatewayAttachmentInitParameters) DeepCopy() *ActiveTransitGatewayAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActiveTransitGatewayAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveTransitGatewayAttachmentList) DeepCopyInto(out *ActiveTransitGatewayAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ActiveTransitGatewayAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveTransitGatewayAttachmentList.
func (in *ActiveTransitGatewayAttachmentList) DeepCopy() *ActiveTransitGatewayAttachmentList {
	if in == nil {
		return nil
	}
	out := new(ActiveTransitGatewayAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActiveTransitGatewayAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveTransitGatewayAttachmentObservation) DeepCopyInto(out *ActiveTransitGatewayAttachmentObservation) {
	*out = *in
	if in.AttachmentStatus != nil {
		in, out := &in.AttachmentStatus, &out.AttachmentStatus
		*out = new(string)
		**out = **in
	}
	if in.AttachmentUID != nil {
		in, out := &in.AttachmentUID, &out.AttachmentUID
		*out = new(string)
		**out = **in
	}
	if in.AwsAccountID != nil {
		in, out := &in.AwsAccountID, &out.AwsAccountID
		*out = new(string)
		**out = **in
	}
	if in.AwsTgwUID != nil {
		in, out := &in.AwsTgwUID, &out.AwsTgwUID
		*out = new(string)
		**out = **in
	}
	if in.Cidrs != nil {
		in, out := &in.Cidrs, &out.Cidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RegionID != nil {
		in, out := &in.RegionID, &out.RegionID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.TgwID != nil {
		in, out := &in.TgwID, &out.TgwID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveTransitGatewayAttachmentObservation.
func (in *ActiveTransitGatewayAttachmentObservation) DeepCopy() *ActiveTransitGatewayAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(ActiveTransitGatewayAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveTransitGatewayAttachmentParameters) DeepCopyInto(out *ActiveTransitGatewayAttachmentParameters) {
	*out = *in
	if in.Cidrs != nil {
		in, out := &in.Cidrs, &out.Cidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RegionID != nil {
		in, out := &in.RegionID, &out.RegionID
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.TgwID != nil {
		in, out := &in.TgwID, &out.TgwID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveTransitGatewayAttachmentParameters.
func (in *ActiveTransitGatewayAttachmentParameters) DeepCopy() *ActiveTransitGatewayAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(ActiveTransitGatewayAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveTransitGatewayAttachmentSpec) DeepCopyInto(out *ActiveTransitGatewayAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveTransitGatewayAttachmentSpec.
func (in *ActiveTransitGatewayAttachmentSpec) DeepCopy() *ActiveTransitGatewayAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(ActiveTransitGatewayAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveTransitGatewayAttachmentStatus) DeepCopyInto(out *ActiveTransitGatewayAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveTransitGatewayAttachmentStatus.
func (in *ActiveTransitGatewayAttachmentStatus) DeepCopy() *ActiveTransitGatewayAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(ActiveTransitGatewayAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreationPlanInitParameters) DeepCopyInto(out *CreationPlanInitParameters) {
	*out = *in
	if in.DatasetSizeInGb != nil {
		in, out := &in.DatasetSizeInGb, &out.DatasetSizeInGb
		*out = new(float64)
		**out = **in
	}
	if in.MemoryLimitInGb != nil {
		in, out := &in.MemoryLimitInGb, &out.MemoryLimitInGb
		*out = new(float64)
		**out = **in
	}
	if in.Modules != nil {
		in, out := &in.Modules, &out.Modules
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Quantity != nil {
		in, out := &in.Quantity, &out.Quantity
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = make([]RegionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreationPlanInitParameters.
func (in *CreationPlanInitParameters) DeepCopy() *CreationPlanInitParameters {
	if in == nil {
		return nil
	}
	out := new(CreationPlanInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreationPlanObservation) DeepCopyInto(out *CreationPlanObservation) {
	*out = *in
	if in.DatasetSizeInGb != nil {
		in, out := &in.DatasetSizeInGb, &out.DatasetSizeInGb
		*out = new(float64)
		**out = **in
	}
	if in.MemoryLimitInGb != nil {
		in, out := &in.MemoryLimitInGb, &out.MemoryLimitInGb
		*out = new(float64)
		**out = **in
	}
	if in.Modules != nil {
		in, out := &in.Modules, &out.Modules
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Quantity != nil {
		in, out := &in.Quantity, &out.Quantity
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = make([]RegionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreationPlanObservation.
func (in *CreationPlanObservation) DeepCopy() *CreationPlanObservation {
	if in == nil {
		return nil
	}
	out := new(CreationPlanObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreationPlanParameters) DeepCopyInto(out *CreationPlanParameters) {
	*out = *in
	if in.DatasetSizeInGb != nil {
		in, out := &in.DatasetSizeInGb, &out.DatasetSizeInGb
		*out = new(float64)
		**out = **in
	}
	if in.MemoryLimitInGb != nil {
		in, out := &in.MemoryLimitInGb, &out.MemoryLimitInGb
		*out = new(float64)
		**out = **in
	}
	if in.Modules != nil {
		in, out := &in.Modules, &out.Modules
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Quantity != nil {
		in, out := &in.Quantity, &out.Quantity
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = make([]RegionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreationPlanParameters.
func (in *CreationPlanParameters) DeepCopy() *CreationPlanParameters {
	if in == nil {
		return nil
	}
	out := new(CreationPlanParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseInitParameters) DeepCopyInto(out *DatabaseInitParameters) {
	*out = *in
	if in.DatabaseID != nil {
		in, out := &in.DatabaseID, &out.DatabaseID
		*out = new(float64)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.LocalReadOperationsPerSecond != nil {
		in, out := &in.LocalReadOperationsPerSecond, &out.LocalReadOperationsPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.LocalWriteOperationsPerSecond != nil {
		in, out := &in.LocalWriteOperationsPerSecond, &out.LocalWriteOperationsPerSecond
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseInitParameters.
func (in *DatabaseInitParameters) DeepCopy() *DatabaseInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatabaseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseObservation) DeepCopyInto(out *DatabaseObservation) {
	*out = *in
	if in.DatabaseID != nil {
		in, out := &in.DatabaseID, &out.DatabaseID
		*out = new(float64)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.LocalReadOperationsPerSecond != nil {
		in, out := &in.LocalReadOperationsPerSecond, &out.LocalReadOperationsPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.LocalWriteOperationsPerSecond != nil {
		in, out := &in.LocalWriteOperationsPerSecond, &out.LocalWriteOperationsPerSecond
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseObservation.
func (in *DatabaseObservation) DeepCopy() *DatabaseObservation {
	if in == nil {
		return nil
	}
	out := new(DatabaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseParameters) DeepCopyInto(out *DatabaseParameters) {
	*out = *in
	if in.DatabaseID != nil {
		in, out := &in.DatabaseID, &out.DatabaseID
		*out = new(float64)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.LocalReadOperationsPerSecond != nil {
		in, out := &in.LocalReadOperationsPerSecond, &out.LocalReadOperationsPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.LocalWriteOperationsPerSecond != nil {
		in, out := &in.LocalWriteOperationsPerSecond, &out.LocalWriteOperationsPerSecond
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseParameters.
func (in *DatabaseParameters) DeepCopy() *DatabaseParameters {
	if in == nil {
		return nil
	}
	out := new(DatabaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAlertInitParameters) DeepCopyInto(out *GlobalAlertInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAlertInitParameters.
func (in *GlobalAlertInitParameters) DeepCopy() *GlobalAlertInitParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalAlertInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAlertObservation) DeepCopyInto(out *GlobalAlertObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAlertObservation.
func (in *GlobalAlertObservation) DeepCopy() *GlobalAlertObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalAlertObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAlertParameters) DeepCopyInto(out *GlobalAlertParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAlertParameters.
func (in *GlobalAlertParameters) DeepCopy() *GlobalAlertParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalAlertParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowsInitParameters) DeepCopyInto(out *MaintenanceWindowsInitParameters) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Window != nil {
		in, out := &in.Window, &out.Window
		*out = make([]WindowInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowsInitParameters.
func (in *MaintenanceWindowsInitParameters) DeepCopy() *MaintenanceWindowsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowsObservation) DeepCopyInto(out *MaintenanceWindowsObservation) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Window != nil {
		in, out := &in.Window, &out.Window
		*out = make([]WindowObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowsObservation.
func (in *MaintenanceWindowsObservation) DeepCopy() *MaintenanceWindowsObservation {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowsParameters) DeepCopyInto(out *MaintenanceWindowsParameters) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Window != nil {
		in, out := &in.Window, &out.Window
		*out = make([]WindowParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowsParameters.
func (in *MaintenanceWindowsParameters) DeepCopy() *MaintenanceWindowsParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverrideGlobalAlertInitParameters) DeepCopyInto(out *OverrideGlobalAlertInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverrideGlobalAlertInitParameters.
func (in *OverrideGlobalAlertInitParameters) DeepCopy() *OverrideGlobalAlertInitParameters {
	if in == nil {
		return nil
	}
	out := new(OverrideGlobalAlertInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverrideGlobalAlertObservation) DeepCopyInto(out *OverrideGlobalAlertObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverrideGlobalAlertObservation.
func (in *OverrideGlobalAlertObservation) DeepCopy() *OverrideGlobalAlertObservation {
	if in == nil {
		return nil
	}
	out := new(OverrideGlobalAlertObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverrideGlobalAlertParameters) DeepCopyInto(out *OverrideGlobalAlertParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverrideGlobalAlertParameters.
func (in *OverrideGlobalAlertParameters) DeepCopy() *OverrideGlobalAlertParameters {
	if in == nil {
		return nil
	}
	out := new(OverrideGlobalAlertParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverrideRegionInitParameters) DeepCopyInto(out *OverrideRegionInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OverrideGlobalAlert != nil {
		in, out := &in.OverrideGlobalAlert, &out.OverrideGlobalAlert
		*out = make([]OverrideGlobalAlertInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OverrideGlobalDataPersistence != nil {
		in, out := &in.OverrideGlobalDataPersistence, &out.OverrideGlobalDataPersistence
		*out = new(string)
		**out = **in
	}
	if in.OverrideGlobalPasswordSecretRef != nil {
		in, out := &in.OverrideGlobalPasswordSecretRef, &out.OverrideGlobalPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.OverrideGlobalSourceIps != nil {
		in, out := &in.OverrideGlobalSourceIps, &out.OverrideGlobalSourceIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RemoteBackup != nil {
		in, out := &in.RemoteBackup, &out.RemoteBackup
		*out = make([]RemoteBackupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverrideRegionInitParameters.
func (in *OverrideRegionInitParameters) DeepCopy() *OverrideRegionInitParameters {
	if in == nil {
		return nil
	}
	out := new(OverrideRegionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverrideRegionObservation) DeepCopyInto(out *OverrideRegionObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OverrideGlobalAlert != nil {
		in, out := &in.OverrideGlobalAlert, &out.OverrideGlobalAlert
		*out = make([]OverrideGlobalAlertObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OverrideGlobalDataPersistence != nil {
		in, out := &in.OverrideGlobalDataPersistence, &out.OverrideGlobalDataPersistence
		*out = new(string)
		**out = **in
	}
	if in.OverrideGlobalSourceIps != nil {
		in, out := &in.OverrideGlobalSourceIps, &out.OverrideGlobalSourceIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RemoteBackup != nil {
		in, out := &in.RemoteBackup, &out.RemoteBackup
		*out = make([]RemoteBackupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverrideRegionObservation.
func (in *OverrideRegionObservation) DeepCopy() *OverrideRegionObservation {
	if in == nil {
		return nil
	}
	out := new(OverrideRegionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverrideRegionParameters) DeepCopyInto(out *OverrideRegionParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OverrideGlobalAlert != nil {
		in, out := &in.OverrideGlobalAlert, &out.OverrideGlobalAlert
		*out = make([]OverrideGlobalAlertParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OverrideGlobalDataPersistence != nil {
		in, out := &in.OverrideGlobalDataPersistence, &out.OverrideGlobalDataPersistence
		*out = new(string)
		**out = **in
	}
	if in.OverrideGlobalPasswordSecretRef != nil {
		in, out := &in.OverrideGlobalPasswordSecretRef, &out.OverrideGlobalPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.OverrideGlobalSourceIps != nil {
		in, out := &in.OverrideGlobalSourceIps, &out.OverrideGlobalSourceIps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RemoteBackup != nil {
		in, out := &in.RemoteBackup, &out.RemoteBackup
		*out = make([]RemoteBackupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverrideRegionParameters.
func (in *OverrideRegionParameters) DeepCopy() *OverrideRegionParameters {
	if in == nil {
		return nil
	}
	out := new(OverrideRegionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PricingInitParameters) DeepCopyInto(out *PricingInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PricingInitParameters.
func (in *PricingInitParameters) DeepCopy() *PricingInitParameters {
	if in == nil {
		return nil
	}
	out := new(PricingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PricingObservation) DeepCopyInto(out *PricingObservation) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.PriceCurrency != nil {
		in, out := &in.PriceCurrency, &out.PriceCurrency
		*out = new(string)
		**out = **in
	}
	if in.PricePerUnit != nil {
		in, out := &in.PricePerUnit, &out.PricePerUnit
		*out = new(float64)
		**out = **in
	}
	if in.PricePeriod != nil {
		in, out := &in.PricePeriod, &out.PricePeriod
		*out = new(string)
		**out = **in
	}
	if in.Quantity != nil {
		in, out := &in.Quantity, &out.Quantity
		*out = new(float64)
		**out = **in
	}
	if in.QuantityMeasurement != nil {
		in, out := &in.QuantityMeasurement, &out.QuantityMeasurement
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.TypeDetails != nil {
		in, out := &in.TypeDetails, &out.TypeDetails
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PricingObservation.
func (in *PricingObservation) DeepCopy() *PricingObservation {
	if in == nil {
		return nil
	}
	out := new(PricingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PricingParameters) DeepCopyInto(out *PricingParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PricingParameters.
func (in *PricingParameters) DeepCopy() *PricingParameters {
	if in == nil {
		return nil
	}
	out := new(PricingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInitParameters) DeepCopyInto(out *RegionInitParameters) {
	*out = *in
	if in.NetworkingDeploymentCidr != nil {
		in, out := &in.NetworkingDeploymentCidr, &out.NetworkingDeploymentCidr
		*out = new(string)
		**out = **in
	}
	if in.ReadOperationsPerSecond != nil {
		in, out := &in.ReadOperationsPerSecond, &out.ReadOperationsPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.WriteOperationsPerSecond != nil {
		in, out := &in.WriteOperationsPerSecond, &out.WriteOperationsPerSecond
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInitParameters.
func (in *RegionInitParameters) DeepCopy() *RegionInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionObservation) DeepCopyInto(out *RegionObservation) {
	*out = *in
	if in.NetworkingDeploymentCidr != nil {
		in, out := &in.NetworkingDeploymentCidr, &out.NetworkingDeploymentCidr
		*out = new(string)
		**out = **in
	}
	if in.ReadOperationsPerSecond != nil {
		in, out := &in.ReadOperationsPerSecond, &out.ReadOperationsPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.WriteOperationsPerSecond != nil {
		in, out := &in.WriteOperationsPerSecond, &out.WriteOperationsPerSecond
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionObservation.
func (in *RegionObservation) DeepCopy() *RegionObservation {
	if in == nil {
		return nil
	}
	out := new(RegionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionParameters) DeepCopyInto(out *RegionParameters) {
	*out = *in
	if in.NetworkingDeploymentCidr != nil {
		in, out := &in.NetworkingDeploymentCidr, &out.NetworkingDeploymentCidr
		*out = new(string)
		**out = **in
	}
	if in.ReadOperationsPerSecond != nil {
		in, out := &in.ReadOperationsPerSecond, &out.ReadOperationsPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.WriteOperationsPerSecond != nil {
		in, out := &in.WriteOperationsPerSecond, &out.WriteOperationsPerSecond
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionParameters.
func (in *RegionParameters) DeepCopy() *RegionParameters {
	if in == nil {
		return nil
	}
	out := new(RegionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteBackupInitParameters) DeepCopyInto(out *RemoteBackupInitParameters) {
	*out = *in
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.StoragePath != nil {
		in, out := &in.StoragePath, &out.StoragePath
		*out = new(string)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.TimeUtc != nil {
		in, out := &in.TimeUtc, &out.TimeUtc
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteBackupInitParameters.
func (in *RemoteBackupInitParameters) DeepCopy() *RemoteBackupInitParameters {
	if in == nil {
		return nil
	}
	out := new(RemoteBackupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteBackupObservation) DeepCopyInto(out *RemoteBackupObservation) {
	*out = *in
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.StoragePath != nil {
		in, out := &in.StoragePath, &out.StoragePath
		*out = new(string)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.TimeUtc != nil {
		in, out := &in.TimeUtc, &out.TimeUtc
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteBackupObservation.
func (in *RemoteBackupObservation) DeepCopy() *RemoteBackupObservation {
	if in == nil {
		return nil
	}
	out := new(RemoteBackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteBackupParameters) DeepCopyInto(out *RemoteBackupParameters) {
	*out = *in
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(string)
		**out = **in
	}
	if in.StoragePath != nil {
		in, out := &in.StoragePath, &out.StoragePath
		*out = new(string)
		**out = **in
	}
	if in.StorageType != nil {
		in, out := &in.StorageType, &out.StorageType
		*out = new(string)
		**out = **in
	}
	if in.TimeUtc != nil {
		in, out := &in.TimeUtc, &out.TimeUtc
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteBackupParameters.
func (in *RemoteBackupParameters) DeepCopy() *RemoteBackupParameters {
	if in == nil {
		return nil
	}
	out := new(RemoteBackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAttachmentsInitParameters) DeepCopyInto(out *ServiceAttachmentsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAttachmentsInitParameters.
func (in *ServiceAttachmentsInitParameters) DeepCopy() *ServiceAttachmentsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceAttachmentsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAttachmentsObservation) DeepCopyInto(out *ServiceAttachmentsObservation) {
	*out = *in
	if in.DNSRecord != nil {
		in, out := &in.DNSRecord, &out.DNSRecord
		*out = new(string)
		**out = **in
	}
	if in.ForwardingRuleName != nil {
		in, out := &in.ForwardingRuleName, &out.ForwardingRuleName
		*out = new(string)
		**out = **in
	}
	if in.IPAddressName != nil {
		in, out := &in.IPAddressName, &out.IPAddressName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAttachmentsObservation.
func (in *ServiceAttachmentsObservation) DeepCopy() *ServiceAttachmentsObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceAttachmentsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAttachmentsParameters) DeepCopyInto(out *ServiceAttachmentsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAttachmentsParameters.
func (in *ServiceAttachmentsParameters) DeepCopy() *ServiceAttachmentsParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceAttachmentsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowInitParameters) DeepCopyInto(out *WindowInitParameters) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DurationInHours != nil {
		in, out := &in.DurationInHours, &out.DurationInHours
		*out = new(float64)
		**out = **in
	}
	if in.StartHour != nil {
		in, out := &in.StartHour, &out.StartHour
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowInitParameters.
func (in *WindowInitParameters) DeepCopy() *WindowInitParameters {
	if in == nil {
		return nil
	}
	out := new(WindowInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowObservation) DeepCopyInto(out *WindowObservation) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DurationInHours != nil {
		in, out := &in.DurationInHours, &out.DurationInHours
		*out = new(float64)
		**out = **in
	}
	if in.StartHour != nil {
		in, out := &in.StartHour, &out.StartHour
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowObservation.
func (in *WindowObservation) DeepCopy() *WindowObservation {
	if in == nil {
		return nil
	}
	out := new(WindowObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WindowParameters) DeepCopyInto(out *WindowParameters) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DurationInHours != nil {
		in, out := &in.DurationInHours, &out.DurationInHours
		*out = new(float64)
		**out = **in
	}
	if in.StartHour != nil {
		in, out := &in.StartHour, &out.StartHour
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WindowParameters.
func (in *WindowParameters) DeepCopy() *WindowParameters {
	if in == nil {
		return nil
	}
	out := new(WindowParameters)
	in.DeepCopyInto(out)
	return out
}
