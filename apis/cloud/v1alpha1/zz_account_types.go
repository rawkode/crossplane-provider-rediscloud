// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AccountInitParameters struct {

	// Cloud provider access key.
	// Cloud provider access key
	AccessKeyID *string `json:"accessKeyId,omitempty" tf:"access_key_id,omitempty"`

	// Cloud provider secret key.
	// Note that drift cannot currently be detected for this.
	// Cloud provider secret key
	AccessSecretKeySecretRef v1.SecretKeySelector `json:"accessSecretKeySecretRef" tf:"-"`

	// Cloud provider management console password.
	// Note that drift cannot currently be detected for this.
	// Cloud provider management console password
	ConsolePasswordSecretRef v1.SecretKeySelector `json:"consolePasswordSecretRef" tf:"-"`

	// Cloud provider management console username.
	// Note that drift cannot currently be detected for this.
	// Cloud provider management console username
	ConsoleUsername *string `json:"consoleUsername,omitempty" tf:"console_username,omitempty"`

	// Display name of the account.
	// Display name of the account
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Cloud provider type - either AWS or GCP.
	// Note that drift cannot currently be detected for this. Modifying this attribute will force creation of a new resource.
	// Cloud provider type - either `AWS` or `GCP`
	ProviderType *string `json:"providerType,omitempty" tf:"provider_type,omitempty"`

	// Cloud provider management console login URL.
	// Note that drift cannot currently be detected for this.
	// Cloud provider management console login URL
	SignInLoginURL *string `json:"signInLoginUrl,omitempty" tf:"sign_in_login_url,omitempty"`
}

type AccountObservation struct {

	// Cloud provider access key.
	// Cloud provider access key
	AccessKeyID *string `json:"accessKeyId,omitempty" tf:"access_key_id,omitempty"`

	// Cloud provider management console username.
	// Note that drift cannot currently be detected for this.
	// Cloud provider management console username
	ConsoleUsername *string `json:"consoleUsername,omitempty" tf:"console_username,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Display name of the account.
	// Display name of the account
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Cloud provider type - either AWS or GCP.
	// Note that drift cannot currently be detected for this. Modifying this attribute will force creation of a new resource.
	// Cloud provider type - either `AWS` or `GCP`
	ProviderType *string `json:"providerType,omitempty" tf:"provider_type,omitempty"`

	// Cloud provider management console login URL.
	// Note that drift cannot currently be detected for this.
	// Cloud provider management console login URL
	SignInLoginURL *string `json:"signInLoginUrl,omitempty" tf:"sign_in_login_url,omitempty"`

	// The current status of the account - `draft`, `pending` or `active`
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type AccountParameters struct {

	// Cloud provider access key.
	// Cloud provider access key
	// +kubebuilder:validation:Optional
	AccessKeyID *string `json:"accessKeyId,omitempty" tf:"access_key_id,omitempty"`

	// Cloud provider secret key.
	// Note that drift cannot currently be detected for this.
	// Cloud provider secret key
	// +kubebuilder:validation:Optional
	AccessSecretKeySecretRef v1.SecretKeySelector `json:"accessSecretKeySecretRef" tf:"-"`

	// Cloud provider management console password.
	// Note that drift cannot currently be detected for this.
	// Cloud provider management console password
	// +kubebuilder:validation:Optional
	ConsolePasswordSecretRef v1.SecretKeySelector `json:"consolePasswordSecretRef" tf:"-"`

	// Cloud provider management console username.
	// Note that drift cannot currently be detected for this.
	// Cloud provider management console username
	// +kubebuilder:validation:Optional
	ConsoleUsername *string `json:"consoleUsername,omitempty" tf:"console_username,omitempty"`

	// Display name of the account.
	// Display name of the account
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Cloud provider type - either AWS or GCP.
	// Note that drift cannot currently be detected for this. Modifying this attribute will force creation of a new resource.
	// Cloud provider type - either `AWS` or `GCP`
	// +kubebuilder:validation:Optional
	ProviderType *string `json:"providerType,omitempty" tf:"provider_type,omitempty"`

	// Cloud provider management console login URL.
	// Note that drift cannot currently be detected for this.
	// Cloud provider management console login URL
	// +kubebuilder:validation:Optional
	SignInLoginURL *string `json:"signInLoginUrl,omitempty" tf:"sign_in_login_url,omitempty"`
}

// AccountSpec defines the desired state of Account
type AccountSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AccountParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AccountInitParameters `json:"initProvider,omitempty"`
}

// AccountStatus defines the observed state of Account.
type AccountStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AccountObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Account is the Schema for the Accounts API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,rediscloud}
type Account struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accessKeyId) || (has(self.initProvider) && has(self.initProvider.accessKeyId))",message="spec.forProvider.accessKeyId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accessSecretKeySecretRef)",message="spec.forProvider.accessSecretKeySecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.consolePasswordSecretRef)",message="spec.forProvider.consolePasswordSecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.consoleUsername) || (has(self.initProvider) && has(self.initProvider.consoleUsername))",message="spec.forProvider.consoleUsername is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.providerType) || (has(self.initProvider) && has(self.initProvider.providerType))",message="spec.forProvider.providerType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.signInLoginUrl) || (has(self.initProvider) && has(self.initProvider.signInLoginUrl))",message="spec.forProvider.signInLoginUrl is a required parameter"
	Spec   AccountSpec   `json:"spec"`
	Status AccountStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AccountList contains a list of Accounts
type AccountList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Account `json:"items"`
}

// Repository type metadata.
var (
	Account_Kind             = "Account"
	Account_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Account_Kind}.String()
	Account_KindAPIVersion   = Account_Kind + "." + CRDGroupVersion.String()
	Account_GroupVersionKind = CRDGroupVersion.WithKind(Account_Kind)
)

func init() {
	SchemeBuilder.Register(&Account{}, &AccountList{})
}
