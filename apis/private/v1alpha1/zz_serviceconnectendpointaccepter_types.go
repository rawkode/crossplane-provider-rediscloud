// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ServiceConnectEndpointAccepterInitParameters struct {

	// Accept or reject the endpoint (accepted values are accept and reject)
	// Accept or reject the endpoint
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// The ID of the Private Service Connect Service relative to the associated subscription Modifying this attribute will force creation of a new resource.
	// The ID of the Private Service Connect Endpoint
	PrivateServiceConnectEndpointID *float64 `json:"privateServiceConnectEndpointId,omitempty" tf:"private_service_connect_endpoint_id,omitempty"`

	// The ID of the Private Service Connect Service relative to the associated subscription Modifying this attribute will force creation of a new resource.
	// The ID of the Private Service Connect
	PrivateServiceConnectServiceID *float64 `json:"privateServiceConnectServiceId,omitempty" tf:"private_service_connect_service_id,omitempty"`

	// The ID of the Pro subscription to attach Modifying this attribute will force creation of a new resource.
	// The ID of the Pro subscription to attach
	SubscriptionID *string `json:"subscriptionId,omitempty" tf:"subscription_id,omitempty"`
}

type ServiceConnectEndpointAccepterObservation struct {

	// Accept or reject the endpoint (accepted values are accept and reject)
	// Accept or reject the endpoint
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The ID of the Private Service Connect Service relative to the associated subscription Modifying this attribute will force creation of a new resource.
	// The ID of the Private Service Connect Endpoint
	PrivateServiceConnectEndpointID *float64 `json:"privateServiceConnectEndpointId,omitempty" tf:"private_service_connect_endpoint_id,omitempty"`

	// The ID of the Private Service Connect Service relative to the associated subscription Modifying this attribute will force creation of a new resource.
	// The ID of the Private Service Connect
	PrivateServiceConnectServiceID *float64 `json:"privateServiceConnectServiceId,omitempty" tf:"private_service_connect_service_id,omitempty"`

	// The ID of the Pro subscription to attach Modifying this attribute will force creation of a new resource.
	// The ID of the Pro subscription to attach
	SubscriptionID *string `json:"subscriptionId,omitempty" tf:"subscription_id,omitempty"`
}

type ServiceConnectEndpointAccepterParameters struct {

	// Accept or reject the endpoint (accepted values are accept and reject)
	// Accept or reject the endpoint
	// +kubebuilder:validation:Optional
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// The ID of the Private Service Connect Service relative to the associated subscription Modifying this attribute will force creation of a new resource.
	// The ID of the Private Service Connect Endpoint
	// +kubebuilder:validation:Optional
	PrivateServiceConnectEndpointID *float64 `json:"privateServiceConnectEndpointId,omitempty" tf:"private_service_connect_endpoint_id,omitempty"`

	// The ID of the Private Service Connect Service relative to the associated subscription Modifying this attribute will force creation of a new resource.
	// The ID of the Private Service Connect
	// +kubebuilder:validation:Optional
	PrivateServiceConnectServiceID *float64 `json:"privateServiceConnectServiceId,omitempty" tf:"private_service_connect_service_id,omitempty"`

	// The ID of the Pro subscription to attach Modifying this attribute will force creation of a new resource.
	// The ID of the Pro subscription to attach
	// +kubebuilder:validation:Optional
	SubscriptionID *string `json:"subscriptionId,omitempty" tf:"subscription_id,omitempty"`
}

// ServiceConnectEndpointAccepterSpec defines the desired state of ServiceConnectEndpointAccepter
type ServiceConnectEndpointAccepterSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ServiceConnectEndpointAccepterParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ServiceConnectEndpointAccepterInitParameters `json:"initProvider,omitempty"`
}

// ServiceConnectEndpointAccepterStatus defines the observed state of ServiceConnectEndpointAccepter.
type ServiceConnectEndpointAccepterStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ServiceConnectEndpointAccepterObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ServiceConnectEndpointAccepter is the Schema for the ServiceConnectEndpointAccepters API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,rediscloud}
type ServiceConnectEndpointAccepter struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.action) || (has(self.initProvider) && has(self.initProvider.action))",message="spec.forProvider.action is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.privateServiceConnectEndpointId) || (has(self.initProvider) && has(self.initProvider.privateServiceConnectEndpointId))",message="spec.forProvider.privateServiceConnectEndpointId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.privateServiceConnectServiceId) || (has(self.initProvider) && has(self.initProvider.privateServiceConnectServiceId))",message="spec.forProvider.privateServiceConnectServiceId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.subscriptionId) || (has(self.initProvider) && has(self.initProvider.subscriptionId))",message="spec.forProvider.subscriptionId is a required parameter"
	Spec   ServiceConnectEndpointAccepterSpec   `json:"spec"`
	Status ServiceConnectEndpointAccepterStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServiceConnectEndpointAccepterList contains a list of ServiceConnectEndpointAccepters
type ServiceConnectEndpointAccepterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServiceConnectEndpointAccepter `json:"items"`
}

// Repository type metadata.
var (
	ServiceConnectEndpointAccepter_Kind             = "ServiceConnectEndpointAccepter"
	ServiceConnectEndpointAccepter_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ServiceConnectEndpointAccepter_Kind}.String()
	ServiceConnectEndpointAccepter_KindAPIVersion   = ServiceConnectEndpointAccepter_Kind + "." + CRDGroupVersion.String()
	ServiceConnectEndpointAccepter_GroupVersionKind = CRDGroupVersion.WithKind(ServiceConnectEndpointAccepter_Kind)
)

func init() {
	SchemeBuilder.Register(&ServiceConnectEndpointAccepter{}, &ServiceConnectEndpointAccepterList{})
}
