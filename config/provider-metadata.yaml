name: RedisLabs/rediscloud
resources:
    rediscloud_acl_role:
        subCategory: ""
        description: ACL Role resource in the Redis Cloud Terraform provider.
        name: rediscloud_acl_role
        title: rediscloud_acl_role
        examples:
            - name: role-resource
              manifest: |-
                {
                  "name": "my-role",
                  "rule": [
                    {
                      "database": [
                        {
                          "database": "${rediscloud_subscription_database.database-resource.db_id}",
                          "subscription": "${rediscloud_subscription.subscription-resource.id}"
                        }
                      ],
                      "name": "${rediscloud_acl_rule.rule-resource.name}"
                    }
                  ]
                }
              references:
                rule.database.database: rediscloud_subscription_database.database-resource.db_id
                rule.database.subscription: rediscloud_subscription.subscription-resource.id
                rule.name: rediscloud_acl_rule.rule-resource.name
              dependencies:
                rediscloud_acl_rule.rule-resource: |-
                    {
                      "name": "my-rule",
                      "rule": "+@read ~cache:*"
                    }
        argumentDocs:
            id: '- Identifier of the Role created.'
            name: '- (Required) A meaningful name for the role. Must be unique.'
            rule: '- (Required, minimum 1) A set of rule association objects, documented below.'
            rule.database: '- (Required, minimum 1) a set of database association objects, documented below.'
            rule.database.database: (Required) - ID of the database to which the Rule should apply.
            rule.database.regions: (Optional) - For databases in Active/Active subscriptions only, the regions to which the Rule should apply.
            rule.database.subscription: (Required) - ID of the subscription containing the database.
            rule.name: (Required) - Name of the Rule.
            timeouts.create: '- (Defaults to 5 mins) Used when creating the Role.'
            timeouts.delete: '- (Defaults to 5 mins) Used when destroying the Role.'
            timeouts.update: '- (Defaults to 5 mins) Used when updating the Role.'
        importStatements: []
    rediscloud_acl_rule:
        subCategory: ""
        description: ACL Rule resource in the Redis Cloud Terraform provider.
        name: rediscloud_acl_rule
        title: rediscloud_acl_rule
        examples:
            - name: rule-resource
              manifest: |-
                {
                  "name": "my-rule",
                  "rule": "+@read ~cache:*"
                }
        argumentDocs:
            id: '- Identifier of the Rule created.'
            name: '- (Required) A meaningful name for the rule. Must be unique.'
            rule: |-
                - (Required) The ACL rule itself, built up as permissions/restrictions written in
                the ACL Syntax.
            timeouts.create: '- (Defaults to 5 mins) Used when creating the Rule.'
            timeouts.delete: '- (Defaults to 5 mins) Used when destroying the Rule.'
            timeouts.update: '- (Defaults to 5 mins) Used when updating the Rule.'
        importStatements: []
    rediscloud_acl_user:
        subCategory: ""
        description: ACL User resource in the Redis Cloud Terraform provider.
        name: rediscloud_acl_user
        title: rediscloud_acl_user
        examples:
            - name: user-resource
              manifest: |-
                {
                  "name": "my-user",
                  "password": "mY.passw0rd",
                  "role": "${rediscloud_acl_role.role-resource.name}"
                }
              references:
                role: rediscloud_acl_role.role-resource.name
        argumentDocs:
            id: '- Identifier of the User created.'
            name: '- (Required, change forces recreation) A meaningful name for the User. Must be unique.'
            password: |-
                - (Required, change forces recreation) The password for this ACL User. Must contain a lower-case letter, a
                upper-case letter, a
                number and a special character.
            role: '- (Required) The name of the Role held by the User.'
            timeouts.create: '- (Defaults to 5 mins) Used when creating the User.'
            timeouts.delete: '- (Defaults to 5 mins) Used when destroying the User.'
            timeouts.update: '- (Defaults to 5 mins) Used when updating the User.'
        importStatements: []
    rediscloud_active_active_private_service_connect:
        subCategory: ""
        description: Private Service Connect resource for Active-Active Subscription in the Redis Cloud Terraform provider.
        name: rediscloud_active_active_private_service_connect
        title: rediscloud_active_active_private_service_connect
        argumentDocs:
            private_service_connect_service_id: '- The ID of the Private Service Connect Service relative to the associated subscription'
            region_id: '- (Required) The ID of the region, as created by the API Modifying this attribute will force creation of a new resource.'
            subscription_id: '- (Required) The ID of the Pro subscription to attach Modifying this attribute will force creation of a new resource.'
        importStatements: []
    rediscloud_active_active_private_service_connect_endpoint:
        subCategory: ""
        description: Private Service Connect Endpoint resource for Active-Active Subscription in the Redis Cloud Terraform provider.
        name: rediscloud_active_active_private_service_connect_endpoint
        title: rediscloud_active_active_private_service_connect_endpoint
        examples:
            - name: endpoint
              manifest: |-
                {
                  "endpoint_connection_name": "redis-${rediscloud_active_active_subscription.subscription.id}",
                  "gcp_project_id": "${var.gcp_project_id}",
                  "gcp_vpc_name": "${var.gcp_vpc_name}",
                  "gcp_vpc_subnet_name": "${var.gcp_subnet_name}",
                  "private_service_connect_service_id": "${rediscloud_active_active_private_service_connect.service.private_service_connect_service_id}",
                  "region_id": "${local.region_id}",
                  "subscription_id": "${rediscloud_active_active_subscription.subscription.id}"
                }
              references:
                gcp_project_id: var.gcp_project_id
                gcp_vpc_name: var.gcp_vpc_name
                gcp_vpc_subnet_name: var.gcp_subnet_name
                private_service_connect_service_id: rediscloud_active_active_private_service_connect.service.private_service_connect_service_id
                region_id: local.region_id
                subscription_id: rediscloud_active_active_subscription.subscription.id
              dependencies:
                google_compute_address.default: |-
                    {
                      "address_type": "INTERNAL",
                      "count": "${local.service_attachment_count}",
                      "name": "${rediscloud_active_active_private_service_connect_endpoint.endpoint.service_attachments[count.index].ip_address_name}",
                      "project": "${var.gcp_project_id}",
                      "region": "${var.gcp_region}",
                      "subnetwork": "${data.google_compute_subnetwork.subnet.id}"
                    }
                google_compute_forwarding_rule.default: |-
                    {
                      "count": "${local.service_attachment_count}",
                      "ip_address": "${google_compute_address.default[count.index].id}",
                      "load_balancing_scheme": "",
                      "name": "${rediscloud_active_active_private_service_connect_endpoint.endpoint.service_attachments[count.index].forwarding_rule_name}",
                      "network": "${var.gcp_vpc_name}",
                      "project": "${var.gcp_project_id}",
                      "region": "${var.gcp_region}",
                      "target": "${rediscloud_active_active_private_service_connect_endpoint.endpoint.service_attachments[count.index].name}"
                    }
                google_dns_response_policy.redis_response_policy: |-
                    {
                      "networks": [
                        {
                          "network_url": "${data.google_compute_network.network.id}"
                        }
                      ],
                      "project": "${var.gcp_project_id}",
                      "response_policy_name": "redis-${var.gcp_vpc_name}"
                    }
                google_dns_response_policy_rule.redis_response_policy_rules: |-
                    {
                      "count": "${local.service_attachment_count}",
                      "dns_name": "${rediscloud_active_active_private_service_connect_endpoint.endpoint.service_attachments[count.index].dns_record}",
                      "local_data": [
                        {
                          "local_datas": [
                            {
                              "name": "${rediscloud_active_active_private_service_connect_endpoint.endpoint.service_attachments[count.index].dns_record}",
                              "rrdatas": [
                                "${google_compute_address.default[count.index].address}"
                              ],
                              "ttl": 300,
                              "type": "A"
                            }
                          ]
                        }
                      ],
                      "project": "${var.gcp_project_id}",
                      "response_policy": "${google_dns_response_policy.redis_response_policy.response_policy_name}",
                      "rule_name": "${rediscloud_active_active_private_service_connect_endpoint.endpoint.service_attachments[count.index].forwarding_rule_name}-${var.gcp_region}-rule"
                    }
                rediscloud_active_active_private_service_connect.service: |-
                    {
                      "region_id": "${local.region_id}",
                      "subscription_id": "${rediscloud_active_active_subscription.subscription.id}"
                    }
                rediscloud_active_active_private_service_connect_endpoint_accepter.accepter: |-
                    {
                      "action": "accept",
                      "depends_on": [
                        "${google_compute_forwarding_rule.default}"
                      ],
                      "private_service_connect_endpoint_id": "${rediscloud_active_active_private_service_connect_endpoint.endpoint.private_service_connect_endpoint_id}",
                      "private_service_connect_service_id": "${rediscloud_active_active_private_service_connect.service.private_service_connect_service_id}",
                      "region_id": "${local.region_id}",
                      "subscription_id": "${rediscloud_active_active_subscription.subscription.id}"
                    }
                rediscloud_active_active_subscription.subscription: |-
                    {
                      "cloud_provider": "GCP",
                      "creation_plan": [
                        {
                          "memory_limit_in_gb": 1,
                          "quantity": 1,
                          "region": [
                            {
                              "networking_deployment_cidr": "192.168.0.0/24",
                              "read_operations_per_second": 1000,
                              "region": "us-central1",
                              "write_operations_per_second": 1000
                            },
                            {
                              "networking_deployment_cidr": "10.0.1.0/24",
                              "read_operations_per_second": 1000,
                              "region": "europe-west1",
                              "write_operations_per_second": 1000
                            }
                          ]
                        }
                      ],
                      "name": "subscription-name",
                      "payment_method_id": "${data.rediscloud_payment_method.card.id}"
                    }
                rediscloud_active_active_subscription_database.database: |-
                    {
                      "global_data_persistence": "aof-every-1-second",
                      "global_password": "some-password",
                      "memory_limit_in_gb": 1,
                      "name": "db",
                      "subscription_id": "${rediscloud_active_active_subscription.subscription.id}"
                    }
                rediscloud_active_active_subscription_regions.regions: |-
                    {
                      "region": [
                        {
                          "database": [
                            {
                              "database_id": "${rediscloud_active_active_subscription_database.database.db_id}",
                              "database_name": "${rediscloud_active_active_subscription_database.database.name}",
                              "local_read_operations_per_second": 1000,
                              "local_write_operations_per_second": 1000
                            }
                          ],
                          "networking_deployment_cidr": "192.168.0.0/24",
                          "region": "us-central1"
                        },
                        {
                          "database": [
                            {
                              "database_id": "${rediscloud_active_active_subscription_database.database.db_id}",
                              "database_name": "${rediscloud_active_active_subscription_database.database.name}",
                              "local_read_operations_per_second": 1000,
                              "local_write_operations_per_second": 1000
                            }
                          ],
                          "networking_deployment_cidr": "10.0.1.0/24",
                          "region": "europe-west1"
                        }
                      ],
                      "subscription_id": "${rediscloud_active_active_subscription.subscription.id}"
                    }
        argumentDocs:
            dns_record: '- DNS record for the service attachment'
            endpoint_connection_name: '- (Required) The endpoint connection name prefix. This prefix that will be used to create the Private Service Connect endpoint in your Google Cloud account Modifying this attribute will force creation of a new resource.'
            forwarding_rule_name: '- Name of the forwarding rule for the service attachment'
            gcp_project_id: '- (Required) The Google Cloud Project ID Modifying this attribute will force creation of a new resource.'
            gcp_vpc_name: '- (Required) The GCP VPC Network name Modifying this attribute will force creation of a new resource.'
            gcp_vpc_subnet_name: '- (Required) The GCP Subnet name Modifying this attribute will force creation of a new resource.'
            ip_address_name: '- IP address name for the service attachment'
            name: '- Name of the service attachment'
            private_service_connect_endpoint_id: '- The ID of the Private Service Connect Endpoint'
            private_service_connect_service_id: '- (Required) The ID of the Private Service Connect Service relative to the associated subscription Modifying this attribute will force creation of a new resource.'
            region_id: '- (Required) The ID of the region, as created by the API Modifying this attribute will force creation of a new resource.'
            service_attachments: '- The 40 service attachments that are created for the Private Service Connect endpoint, documented below'
            subscription_id: '- (Required) The ID of the Pro subscription to attach Modifying this attribute will force creation of a new resource.'
        importStatements: []
    rediscloud_active_active_private_service_connect_endpoint_accepter:
        subCategory: ""
        description: Private Service Connect Endpoint Accepter resource for Active-Active Subscription in the Redis Cloud Terraform provider.
        name: rediscloud_active_active_private_service_connect_endpoint_accepter
        title: rediscloud_active_active_private_service_connect_endpoint_accepter
        argumentDocs:
            action: '- (Required) Accept or reject the endpoint (accepted values are accept and reject)'
            private_service_connect_endpoint_id: '- (Required) The ID of the Private Service Connect Service relative to the associated subscription Modifying this attribute will force creation of a new resource.'
            private_service_connect_service_id: '- (Required) The ID of the Private Service Connect Service relative to the associated subscription Modifying this attribute will force creation of a new resource.'
            region_id: '- (Required) The ID of the region, as created by the API Modifying this attribute will force creation of a new resource.'
            subscription_id: '- (Required) The ID of the Pro subscription to attach Modifying this attribute will force creation of a new resource.'
        importStatements: []
    rediscloud_active_active_subscription:
        subCategory: ""
        description: Subscription resource in the Redis Cloud Terraform provider.
        name: rediscloud_active_active_subscription
        title: rediscloud_active_active_subscription
        examples:
            - name: subscription-resource
              manifest: |-
                {
                  "cloud_provider": "AWS",
                  "creation_plan": [
                    {
                      "dataset_size_in_gb": 1,
                      "modules": [
                        "RedisJSON"
                      ],
                      "quantity": 1,
                      "region": [
                        {
                          "networking_deployment_cidr": "192.168.0.0/24",
                          "read_operations_per_second": 1000,
                          "region": "us-east-1",
                          "write_operations_per_second": 1000
                        },
                        {
                          "networking_deployment_cidr": "10.0.1.0/24",
                          "read_operations_per_second": 1000,
                          "region": "us-east-2",
                          "write_operations_per_second": 1000
                        }
                      ]
                    }
                  ],
                  "name": "subscription-name",
                  "payment_method_id": "${data.rediscloud_payment_method.card.id}"
                }
              references:
                payment_method_id: data.rediscloud_payment_method.card.id
        argumentDocs:
            cloud_provider: '- (Optional) The cloud provider to use with the subscription, (either AWS or GCP). Default: ‘AWS’. Modifying this attribute will force creation of a new resource.'
            creation_plan: '- (Required) A creation plan object, documented below. Ignored after creation.'
            creation_plan.dataset_size_in_gb: is unset
            creation_plan.memory_limit_in_gb: '- (Optional -  Required if ) Maximum memory usage for this specific database, including replication and other overhead Deprecated in favor of'
            creation_plan.modules: '- (Optional) A list of modules to be enabled on all deployments of this database. Either: RedisJSON or RediSearch.'
            creation_plan.quantity: '- (Required) The planned number of databases in the subscription.'
            creation_plan.region: '- (Required) Deployment region block, documented below'
            creation_plan.region.days: '- A list of weekdays on which the window is open (''Monday'', ''Tuesday'' etc)'
            creation_plan.region.duration_in_hours: '- How long the window is open (4-24 hours)'
            creation_plan.region.mode: '- Either automatic (Redis specified) or manual (User specified)'
            creation_plan.region.networking_deployment_cidr: '- (Required) Deployment CIDR mask. The total number of bits must be 24 (x.x.x.x/24)'
            creation_plan.region.read_operations_per_second: '- (Required) Throughput measurement for an active-active subscription'
            creation_plan.region.region: '- (Required) Deployment region as defined by the cloud provider'
            creation_plan.region.start_hour: '- What hour in the day (0-23) the window opens'
            creation_plan.region.window: '- A list of windows (if manual mode)'
            creation_plan.region.write_operations_per_second: '- (Required) Throughput measurement for an active-active subscription'
            maintenance_windows: '- (Optional) The subscription''s maintenance window specification, documented below.'
            name: '- (Required) A meaningful name to identify the subscription'
            payment_method: '(Optional) The payment method for the requested subscription, (either credit-card or marketplace). If credit-card is specified, payment_method_id must be defined. Default: ''credit-card''. (Changes to) this attribute are ignored after creation.'
            payment_method_id: '- (Optional) A valid payment method pre-defined in the current account. This value is Optional for AWS/GCP Marketplace accounts, but Required for all other account types'
            priceCurrency: '- The price currency'
            pricePerUnit: '- Price per Unit.'
            pricePeriod: '- Price period. E.g. ''hour''.'
            pricing: '- A list of pricing objects, documented below'
            quantity: '- Self-explanatory.'
            quantityMeasurement: '- Self-explanatory.'
            redis_version: '- (Optional) The Redis version of the databases in the subscription. If omitted, the Redis version will be the default. Modifying this attribute will force creation of a new resource.'
            region: '- Specify if the cost is associated with a particular region.'
            timeouts.create: '- (Defaults to 30 mins) Used when creating the subscription'
            timeouts.delete: '- (Defaults to 10 mins) Used when destroying the subscription'
            timeouts.update: '- (Defaults to 30 mins) Used when updating the subscription'
            type: '- The type of cost. E.g. ''Shards''.'
            typeDetails: '- Further detail E.g. ''micro''.'
        importStatements: []
    rediscloud_active_active_subscription_database:
        subCategory: ""
        description: Database resource for Active-Active Subscriptions in the Redis Cloud Terraform provider.
        name: rediscloud_active_active_subscription_database
        title: rediscloud_active_active_subscription_database
        examples:
            - name: database-resource
              manifest: |-
                {
                  "dataset_size_in_gb": 1,
                  "global_alert": [
                    {
                      "name": "dataset-size",
                      "value": 1
                    }
                  ],
                  "global_data_persistence": "aof-every-1-second",
                  "global_modules": [
                    "RedisJSON"
                  ],
                  "global_password": "some-random-pass-2",
                  "global_source_ips": [
                    "192.168.0.0/16"
                  ],
                  "name": "database-name",
                  "override_region": [
                    {
                      "name": "us-east-2",
                      "override_global_source_ips": [
                        "192.10.0.0/16"
                      ]
                    },
                    {
                      "name": "us-east-1",
                      "override_global_alert": [
                        {
                          "name": "dataset-size",
                          "value": 60
                        }
                      ],
                      "override_global_data_persistence": "none",
                      "override_global_password": "region-specific-password"
                    }
                  ],
                  "subscription_id": "${rediscloud_active_active_subscription.subscription-resource.id}",
                  "tags": {
                    "cost_center": "0700",
                    "environment": "production"
                  }
                }
              references:
                subscription_id: rediscloud_active_active_subscription.subscription-resource.id
              dependencies:
                rediscloud_active_active_subscription.subscription-resource: |-
                    {
                      "cloud_provider": "AWS",
                      "creation_plan": [
                        {
                          "dataset_size_in_gb": 1,
                          "quantity": 1,
                          "region": [
                            {
                              "networking_deployment_cidr": "192.168.0.0/24",
                              "read_operations_per_second": 1000,
                              "region": "us-east-1",
                              "write_operations_per_second": 1000
                            },
                            {
                              "networking_deployment_cidr": "10.0.1.0/24",
                              "read_operations_per_second": 2000,
                              "region": "us-east-2",
                              "write_operations_per_second": 1000
                            }
                          ]
                        }
                      ],
                      "name": "subscription-name",
                      "payment_method_id": "${data.rediscloud_payment_method.card.id}"
                    }
        argumentDocs:
            client_tls_certificates: '- (Optional) A list of TLS certificates to authenticate user connections, conflicts with client_ssl_certificate'
            data_eviction: '- (Optional) The data items eviction policy (either: ''allkeys-lru'', ''allkeys-lfu'', ''allkeys-random'', ''volatile-lru'', ''volatile-lfu'', ''volatile-random'', ''volatile-ttl'' or ''noeviction''. Default: ''volatile-lru'')'
            dataset_size_in_gb: is unset
            db_id: '- Identifier of the database created'
            enable_tls: |-
                - (Optional) Use TLS for authentication. Default: ‘false’
                client_ssl_certificate - (Optional) SSL certificate to authenticate user connections, conflicts with client_tls_certificates
            external_endpoint_for_oss_cluster_api: |-
                - (Optional) Should use the external endpoint for open-source (OSS) Cluster API.
                Can only be enabled if OSS Cluster API support is enabled. Default: 'false'
            global_alert: '- (Optional) A block defining Redis database alert of regions that don''t override global settings, documented below, can be specified multiple times. (either: ''dataset-size'', ''datasets-size'', ''throughput-higher-than'', ''throughput-lower-than'', ''latency'', ''syncsource-error'', ''syncsource-lag'' or ''connections-limit'')'
            global_data_persistence: '- (Optional) Global rate of database data persistence (in persistent storage) of regions that dont override global settings. Default: ''none'''
            global_modules: '- (Optional) A list of modules to be enabled on all deployments of this database. Supported modules: RedisJSON, RediSearch. Ignored after database creation.'
            global_password: '- (Optional) Password to access the database of regions that don''t override global settings. If left empty, the password will be generated automatically'
            global_resp_version: '- (Optional) Either ''resp2'' or ''resp3''. Resp version for Crdb databases within the AA database. Must be compatible with Redis version.'
            global_source_ips: '- (Optional) List of source IP addresses or subnet masks of regions that don''t override global settings. If specified, Redis clients will be able to connect to this database only from within the specified source IP addresses ranges (example: [''192.168.10.0/32'', ''192.168.12.0/24''])'
            memory_limit_in_gb: '- (Optional -  Required if ) Maximum memory usage for this specific database, including replication and other overhead Deprecated in favor of'
            name: '- (Required) A meaningful name to identify the database. Modifying this attribute will force creation of a new resource.'
            override_region: '- (Optional) Override region specific configuration, documented below'
            override_region.name: '- (Required) Region name.'
            override_region.override_global_alert: '- (Optional) A block defining Redis regional instance of an Active-Active database alert, documented below, can be specified multiple times'
            override_region.override_global_alert.name: '- (Required) Alert name'
            override_region.override_global_alert.value: '- (Required) Alert value'
            override_region.override_global_data_persistence: '- (Optional) Regional instance of an Active-Active database data persistence rate (in persistent storage)'
            override_region.override_global_password: '- (Optional) If specified, this regional instance of an Active-Active database password will be used to access the database'
            override_region.override_global_source_ips: '- (Optional)  List of regional instance of an Active-Active database source IP addresses or subnet masks. If specified, Redis clients will be able to connect to this database only from within the specified source IP addresses ranges (example: [''192.168.10.0/32'', ''192.168.12.0/24''] )'
            override_region.remote_backup: '- (Optional) Specifies the backup options for the database in this region, documented below'
            port: '- (Optional) TCP port on which the database is available - must be between 10000 and 19999. Modifying this attribute will force creation of a new resource.'
            private_endpoint: '- A map of which private endpoints can to access the database per region, uses region name as key.'
            public_endpoint: '- A map of which public endpoints can to access the database per region, uses region name as key.'
            remote_backup.interval: '(Required) - Defines the interval between backups. Should be in the following format ''every-x-hours''. x is one of [24,12,6,4,2,1]. For example: ''every-4-hours'''
            remote_backup.storage_path: (Required) - Defines a URI representing the backup storage location
            remote_backup.storage_type: (Required) - Defines the provider of the storage location
            remote_backup.time_utc: '(Optional) - Defines the hour automatic backups are made - only applicable when the interval is every-12-hours or every-24-hours. For example: ''14:00'''
            subscription_id: ': (Required) The ID of the Active-Active subscription to create the database in. Modifying this attribute will force creation of a new resource.'
            support_oss_cluster_api: '- (Optional) Support Redis open-source (OSS) Cluster API. Default: ‘false’'
            tags: '- (Optional) A string/string map of tags to associate with this database. Note that all keys and values must be lowercase.'
            timeouts.create: '- (Defaults to 30 mins) Used when creating the database'
            timeouts.delete: '- (Defaults to 10 mins) Used when destroying the database'
            timeouts.update: '- (Defaults to 30 mins) Used when updating the database'
        importStatements: []
    rediscloud_active_active_subscription_peering:
        subCategory: ""
        description: Active-Active subscription VPC peering resource in the Redis Cloud Terraform provider.
        name: rediscloud_active_active_subscription_peering
        title: rediscloud_active_active_subscription_peering
        examples:
            - name: peering-resource
              manifest: |-
                {
                  "aws_account_id": "123456789012",
                  "destination_region": "eu-west-2",
                  "source_region": "us-east-1",
                  "subscription_id": "${rediscloud_active_active_subscription.subscription-resource.id}",
                  "vpc_cidr": "10.0.10.0/24",
                  "vpc_id": "vpc-01234567890"
                }
              references:
                subscription_id: rediscloud_active_active_subscription.subscription-resource.id
              dependencies:
                aws_vpc_peering_connection_accepter.aws-peering-resource: |-
                    {
                      "auto_accept": true,
                      "vpc_peering_connection_id": "${rediscloud_active_active_subscription_peering.peering-resource.aws_peering_id}"
                    }
                rediscloud_active_active_subscription.subscription-resource: '{}'
            - name: peering-resource
              manifest: |-
                {
                  "gcp_network_name": "${data.google_compute_network.network.name}",
                  "gcp_project_id": "${data.google_compute_network.network.project}",
                  "provider_name": "GCP",
                  "source_region": "us-central1",
                  "subscription_id": "${rediscloud_active_active_subscription.subscription-resource.id}"
                }
              references:
                gcp_network_name: data.google_compute_network.network.name
                gcp_project_id: data.google_compute_network.network.project
                subscription_id: rediscloud_active_active_subscription.subscription-resource.id
              dependencies:
                google_compute_network_peering.gcp-peering-resource: |-
                    {
                      "name": "peering-gcp-example",
                      "network": "${data.google_compute_network.network.self_link}",
                      "peer_network": "https://www.googleapis.com/compute/v1/projects/${rediscloud_active_active_subscription_peering.peering-resource.gcp_redis_project_id}/global/networks/${rediscloud_active_active_subscription_peering.example.gcp_redis_network_name}"
                    }
                rediscloud_active_active_subscription.subscription-resource: '{}'
        argumentDocs:
            aws_account_id: '- (Required) AWS account ID that the VPC to be peered lives in. Modifying this attribute will force creation of a new resource.'
            aws_peering_id: Identifier of the AWS cloud peering
            destination_region: '- (Required) Name of the region to create the VPC peering to. Modifying this attribute will force creation of a new resource.'
            gcp_network_name: '- (Required) The name of the network to be peered. Modifying this attribute will force creation of a new resource.'
            gcp_peering_id: Identifier of the cloud peering
            gcp_project_id: '- (Required) GCP project ID that the VPC to be peered lives in. Modifying this attribute will force creation of a new resource.'
            gcp_redis_network_name: The name of the Redis Enterprise Cloud network to be peered
            gcp_redis_project_id: Identifier of the Redis Enterprise Cloud GCP project to be peered
            provider_name: '- (Optional) The cloud provider to use with the vpc peering, (either AWS or GCP). Default: ‘AWS’. Modifying this attribute will force creation of a new resource.'
            source_region: "-\t(Required) Name of the region to create the VPC peering from. Modifying this attribute will force creation of a new resource."
            status: is set to the current status of the peering - initiating-request, pending-acceptance, active, inactive or failed.
            subscription_id: '- (Required) A valid Active-Active subscription predefined in the current account. Modifying this attribute will force creation of a new resource.'
            timeouts.create: '- (Defaults to 10 mins) Used when creating the peering connection'
            timeouts.delete: '- (Defaults to 10 mins) Used when deleting the peering connection'
            vpc_cidr: '- (Optional) CIDR range of the VPC to be peered. Either this or vpc_cidrs must be specified. Modifying this attribute will force creation of a new resource.'
            vpc_cidrs: '- (Optional) CIDR ranges of the VPC to be peered. Either this or vpc_cidr must be specified. Modifying this attribute will force creation of a new resource.'
            vpc_id: '- (Required) Identifier of the VPC to be peered. Modifying this attribute will force creation of a new resource.'
        importStatements: []
    rediscloud_active_active_subscription_regions:
        subCategory: ""
        description: Regions resource in the Redis Cloud Terraform provider.
        name: rediscloud_active_active_subscription_regions
        title: rediscloud_active_active_subscription_regions
        examples:
            - name: regions-resource
              manifest: |-
                {
                  "delete_regions": false,
                  "region": [
                    {
                      "database": [
                        {
                          "database_id": "${rediscloud_active_active_subscription_database.database-resource.db_id}",
                          "database_name": "${rediscloud_active_active_subscription_database.database-resource.name}",
                          "local_read_operations_per_second": 1000,
                          "local_write_operations_per_second": 1000
                        }
                      ],
                      "networking_deployment_cidr": "192.168.0.0/24",
                      "region": "us-east-1"
                    },
                    {
                      "database": [
                        {
                          "database_id": "${rediscloud_active_active_subscription_database.database-resource.db_id}",
                          "database_name": "${rediscloud_active_active_subscription_database.database-resource.name}",
                          "local_read_operations_per_second": 4000,
                          "local_write_operations_per_second": 2000
                        }
                      ],
                      "local_resp_version": "resp2",
                      "networking_deployment_cidr": "10.0.1.0/24",
                      "region": "us-east-2"
                    }
                  ],
                  "subscription_id": "${rediscloud_active_active_subscription.subscription-resource.id}"
                }
              references:
                region.database.database_id: rediscloud_active_active_subscription_database.database-resource.db_id
                region.database.database_name: rediscloud_active_active_subscription_database.database-resource.name
                subscription_id: rediscloud_active_active_subscription.subscription-resource.id
        argumentDocs:
            delete_regions: '- (Optional) Flag required to be set when one or more regions is to be deleted, if the flag is not set an error will be thrown'
            region: '- (Required) Cloud networking details, per region, documented below'
            region.database: '- (Required) A block defining the write and read operations in the region, per database, documented below'
            region.database.database_id: '- (Required) Database ID belonging to the subscription'
            region.database.database_name: '- (Required) Database name belonging to the subscription'
            region.database.local_read_operations_per_second: '- (Required) Local read operations per second for this active-active region'
            region.database.local_write_operations_per_second: '- (Required) Local write operations per second for this active-active region'
            region.local_resp_version: '- (Optional) Either ''resp2'' or ''resp3''. Resp version for Crdb databases within this region. Must be compatible with Redis version.'
            region.networking_deployment_cidr: '- (Required) Deployment CIDR mask. The total number of bits must be 24 (x.x.x.x/24)'
            region.recreate_region: '- (Optional) Protection flag, needs to be set if a region has to be re-created. A region will need to be re-created in the case of a change on the networking_deployment_cidr field. During re-create, the region will be deleted (so the delete_regions flag also needs to be set) and then created again. Default: ''false'''
            region.region: '- (Required) Region name'
            region.region_id: '- (Computed) The ID of the region, as created by the API'
            region.vpc_id: '- (Computed) Identifier of the VPC to be peered, set by the API'
            subscription_id: '- (Required) ID of the subscription that the regions belong to. Modifying this attribute will force creation of a new resource.'
            timeouts.create: '- (Defaults to 60 mins) Used when creating the regions'
            timeouts.delete: '- (Defaults to 10 mins) Used when destroying the regions'
            timeouts.update: '- (Defaults to 60 mins) Used when updating the regions'
        importStatements: []
    rediscloud_active_active_transit_gateway_attachment:
        subCategory: ""
        description: Transit Gateway Attachment resource in the Redis Cloud Terraform provider.
        name: rediscloud_active_active_transit_gateway_attachment
        title: rediscloud_transit_gateway_attachment
        examples:
            - name: attachment
              manifest: |-
                {
                  "region_id": 1,
                  "subscription_id": "113492",
                  "tgw_id": "${data.rediscloud_transit_gateway.gateway.tgw_id}"
                }
              references:
                tgw_id: data.rediscloud_transit_gateway.gateway.tgw_id
        argumentDocs:
            attachment_status: '- The status of the Subscription/Transit Gateway attachment, if established'
            attachment_uid: '- A unique identifier for the Subscription/Transit Gateway attachment, if established'
            aws_account_id: '- The Transit Gateway''s AWS account id'
            aws_tgw_uid: '- The id of the Transit Gateway as known to AWS'
            cidrs: '- (Optional) A list of consumer Cidr blocks. May only be added once the Attachment has been accepted'
            region_id: '- (Required) The id of the AWS region'
            status: '- The status of the Transit Gateway'
            subscription_id: '- (Required) The id of the Pro/Flexible subscription to attach'
            tgw_id: '- (Required) The id of the Transit Gateway to attach to'
        importStatements: []
    rediscloud_cloud_account:
        subCategory: ""
        description: Cloud Account resource in the Redis Cloud Terraform provider.
        name: rediscloud_cloud_account
        title: rediscloud_cloud_account
        argumentDocs:
            access_key_id: '- (Required) Cloud provider access key.'
            access_secret_key: |-
                - (Required) Cloud provider secret key.
                Note that drift cannot currently be detected for this.
            console_password: |-
                - (Required) Cloud provider management console password.
                Note that drift cannot currently be detected for this.
            console_username: |-
                - (Required) Cloud provider management console username.
                Note that drift cannot currently be detected for this.
            name: '- (Required) Display name of the account.'
            provider_type: |-
                - (Required) Cloud provider type - either AWS or GCP.
                Note that drift cannot currently be detected for this. Modifying this attribute will force creation of a new resource.
            sign_in_login_url: |-
                - (Required) Cloud provider management console login URL.
                Note that drift cannot currently be detected for this.
            timeouts.create: '- (Defaults to 5 mins) Used when creating the Cloud Account'
            timeouts.delete: '- (Defaults to 5 mins) Used when destroying the Cloud Account'
            timeouts.update: '- (Defaults to 5 mins) Used when updating the Cloud Account'
        importStatements: []
    rediscloud_essentials_database:
        subCategory: ""
        description: Essentials Database resource in the Redis Cloud Terraform provider.
        name: rediscloud_essentials_database
        title: rediscloud_essentials_database
        examples:
            - name: database-resource
              manifest: |-
                {
                  "alert": [
                    {
                      "name": "throughput-higher-than",
                      "value": 80
                    }
                  ],
                  "data_persistence": "none",
                  "enable_default_user": true,
                  "name": "database-name",
                  "password": "my_password",
                  "replication": false,
                  "subscription_id": "${rediscloud_essentials_subscription.subscription-resource.id}",
                  "tags": {
                    "env": "dev",
                    "priority": "2"
                  }
                }
              references:
                subscription_id: rediscloud_essentials_subscription.subscription-resource.id
              dependencies:
                rediscloud_essentials_subscription.subscription-resource: |-
                    {
                      "name": "subscription-name",
                      "payment_method_id": "${data.rediscloud_payment_method.card.id}",
                      "plan_id": "${data.rediscloud_essentials_plan.plan.id}"
                    }
        argumentDocs:
            activated_on: '- When this database was activated.'
            alert: '- (Optional) A block defining Redis database alert. Can be specified multiple times. Documented below.'
            alert.name: '- The alert name.'
            alert.value: '- The alert value.'
            client_tls_certificates: '- (Optional) A list of TLS/SSL certificates (public keys) with new line characters replaced by \n.'
            cloud_provider: '- The Cloud Provider hosting this database.'
            data_eviction: '- (Optional) Data items eviction method. Either: ''allkeys-lru'', ''allkeys-lfu'', ''allkeys-random'', ''volatile-lru'', ''volatile-lfu'', ''volatile-random'', ''volatile-ttl'' or ''noeviction''. Default: ''volatile-lru''.'
            data_persistence: '- (Required) Rate of database data persistence (in persistent storage). Either: ''none'', ''aof-every-1-second'', ''aof-every-write'', ''snapshot-every-1-hour'', ''snapshot-every-6-hours'' or ''snapshot-every-12-hours''.'
            enable_database_clustering: '- (Optional) Only used with Pay-As-You-Go databases. Distributes database data to different cloud instances. Default false.'
            enable_default_user: '- (Optional) When true enables connecting to the database with the default user. Default true. If set to false, any value for password will be ignored.'
            enable_payg_features: '- (Optional) Whether to enable features restricted to Pay-As-You-Go legacy databases. It is not supported for new databases. Default false.'
            enable_tls: '- (Optional) Only used with Pay-As-You-Go databases. Use TLS for authentication. Default false.'
            external_endpoint_for_oss_cluster_api: '- (Optional) Only used with Pay-As-You-Go databases. Should use the external endpoint for open-source (OSS) Cluster API. Default false.'
            memory_limit_in_gb: '- (Optional) Only used with Pay-As-You-Go databases. Maximum memory usage for the database.'
            modules: '- (Optional) A list of modules objects, documented below. Modifying this attribute will force creation of a new resource.'
            name: '- (Required) A meaningful name to identify the database.'
            password: '- (Optional) Password to access the database. If not specified, a random 32 character long alphanumeric password will be automatically generated.'
            periodic_backup_path: '- (Optional) If specified, automatic backups will be every 24 hours and immediate backups to this path will be allowed upon request.'
            private_endpoint: '- Private endpoint to access the database.'
            protocol: '- (Optional) Database protocol. ''stack'' is a suite of all Redis'' data modules. Default: ''stack''. Either: ''redis'', ''memcached'' or ''stack''. ''redis'' is only used with Pay-As-You-Go databases.'
            public_endpoint: '- Public endpoint to access the database.'
            redis_version_compliance: '- The compliance Redis version of the database.'
            regex_rules: '- (Optional) Only used with Pay-As-You-Go databases. Shard regex rules. Relevant only for a sharded database.'
            region: '- The region within the Cloud Provider where this database is hosted.'
            replica: '- (Optional) If specified, this database will be a replica of the specified Redis databases provided, documented below.'
            replica.sync_source: '- The sources to replicate. Documented below.'
            replica.sync_source.encryption: '- Defines if encryption should be used to connect to the sync source.'
            replica.sync_source.endpoint: '- A Redis URI (sample format: ''redis://user:password@host:port)''. If the URI provided is a Redis Cloud instance, only the host and port should be provided (using the format: [''redis://endpoint1:6379'', ''redis://endpoint2:6380''] ).'
            replica.sync_source.server_cert: '- TLS certificate chain of the sync source.'
            replication: '- (Required) Databases replication. Either: ''true'' or ''false''.'
            resp_version: '- (Optional) RESP version must be compatible with the Redis version.'
            source_ips: '- (Optional) List of source IP addresses or subnet masks. If specified, Redis clients will be able to connect to this database only from within the specified source IP address ranges. Example value: [''192.168.10.0/32'', ''192.168.12.0/24''].'
            subscription_id: '- (Required) The ID of the subscription to create the database in. Modifying this attribute will force creation of a new resource.'
            support_oss_cluster_api: '- (Optional) Only used with Pay-As-You-Go databases. Support Redis open-source (OSS) Cluster API. Default false.'
            tags: '- (Optional) A string/string map of tags to associate with this database. Note that all keys and values must be lowercase.'
        importStatements: []
    rediscloud_essentials_subscription:
        subCategory: ""
        description: Essentials Subscription resource in the Redis Cloud Terraform provider.
        name: rediscloud_essentials_subscription
        title: rediscloud_essentials_subscription
        examples:
            - name: subscription-resource
              manifest: |-
                {
                  "name": "subscription-name",
                  "payment_method_id": "${data.rediscloud_payment_method.card.id}",
                  "plan_id": "${data.rediscloud_essentials_plan.plan.id}"
                }
              references:
                payment_method_id: data.rediscloud_payment_method.card.id
                plan_id: data.rediscloud_essentials_plan.plan.id
        argumentDocs:
            creation_date: '- When the subscription was created'
            name: '- (Required) A meaningful name to identify the subscription'
            payment_method_id: '- (Optional) If the plan is paid, this must be a valid payment method pre-defined in the current account'
            plan_id: '- (Required) The plan to which this subscription will belong'
            status: '- The current status of the subscription'
            timeouts.create: '- (Defaults to 30 mins) Used when creating the subscription'
            timeouts.delete: '- (Defaults to 10 mins) Used when destroying the subscription'
            timeouts.update: '- (Defaults to 30 mins) Used when updating the subscription'
        importStatements: []
    rediscloud_private_service_connect:
        subCategory: ""
        description: Private Service Connect Endpoint resource fo Pro Subscription in the Redis Cloud Terraform provider.
        name: rediscloud_private_service_connect
        title: rediscloud_private_service_connect
        examples:
            - name: service
              manifest: |-
                {
                  "subscription_id": "${rediscloud_subscription.subscription.id}"
                }
              references:
                subscription_id: rediscloud_subscription.subscription.id
              dependencies:
                google_compute_address.default: |-
                    {
                      "address_type": "INTERNAL",
                      "count": "${local.service_attachment_count}",
                      "name": "${rediscloud_private_service_connect_endpoint.endpoint.service_attachments[count.index].ip_address_name}",
                      "project": "${var.gcp_project_id}",
                      "region": "${var.gcp_region}",
                      "subnetwork": "${data.google_compute_subnetwork.subnet.id}"
                    }
                google_compute_forwarding_rule.default: |-
                    {
                      "count": "${local.service_attachment_count}",
                      "ip_address": "${google_compute_address.default[count.index].id}",
                      "load_balancing_scheme": "",
                      "name": "${rediscloud_private_service_connect_endpoint.endpoint.service_attachments[count.index].forwarding_rule_name}",
                      "network": "${var.gcp_vpc_name}",
                      "project": "${var.gcp_project_id}",
                      "region": "${var.gcp_region}",
                      "target": "${rediscloud_private_service_connect_endpoint.endpoint.service_attachments[count.index].name}"
                    }
                google_dns_response_policy.redis_response_policy: |-
                    {
                      "networks": [
                        {
                          "network_url": "${data.google_compute_network.network.id}"
                        }
                      ],
                      "project": "${var.gcp_project_id}",
                      "response_policy_name": "redis-${var.gcp_vpc_name}"
                    }
                google_dns_response_policy_rule.redis_response_policy_rules: |-
                    {
                      "count": "${local.service_attachment_count}",
                      "dns_name": "${rediscloud_private_service_connect_endpoint.endpoint.service_attachments[count.index].dns_record}",
                      "local_data": [
                        {
                          "local_datas": [
                            {
                              "name": "${rediscloud_private_service_connect_endpoint.endpoint.service_attachments[count.index].dns_record}",
                              "rrdatas": [
                                "${google_compute_address.default[count.index].address}"
                              ],
                              "ttl": 300,
                              "type": "A"
                            }
                          ]
                        }
                      ],
                      "project": "${var.gcp_project_id}",
                      "response_policy": "${google_dns_response_policy.redis_response_policy.response_policy_name}",
                      "rule_name": "${rediscloud_private_service_connect_endpoint.endpoint.service_attachments[count.index].forwarding_rule_name}-${var.gcp_region}-rule"
                    }
                rediscloud_private_service_connect_endpoint.endpoint: |-
                    {
                      "endpoint_connection_name": "redis-${rediscloud_subscription.subscription.id}",
                      "gcp_project_id": "${var.gcp_project_id}",
                      "gcp_vpc_name": "${var.gcp_vpc_name}",
                      "gcp_vpc_subnet_name": "${var.gcp_subnet_name}",
                      "private_service_connect_service_id": "${rediscloud_private_service_connect.service.private_service_connect_service_id}",
                      "subscription_id": "${rediscloud_subscription.subscription.id}"
                    }
                rediscloud_private_service_connect_endpoint_accepter.accepter: |-
                    {
                      "action": "accept",
                      "depends_on": [
                        "${google_compute_forwarding_rule.default}"
                      ],
                      "private_service_connect_endpoint_id": "${rediscloud_private_service_connect_endpoint.endpoint.private_service_connect_endpoint_id}",
                      "private_service_connect_service_id": "${rediscloud_private_service_connect.service.private_service_connect_service_id}",
                      "subscription_id": "${rediscloud_subscription.subscription.id}"
                    }
                rediscloud_subscription.subscription: |-
                    {
                      "cloud_provider": [
                        {
                          "provider": "GCP",
                          "region": [
                            {
                              "networking_deployment_cidr": "10.0.1.0/24",
                              "region": "${var.gcp_region}"
                            }
                          ]
                        }
                      ],
                      "creation_plan": [
                        {
                          "dataset_size_in_gb": 15,
                          "quantity": 1,
                          "replication": true,
                          "throughput_measurement_by": "operations-per-second",
                          "throughput_measurement_value": 20000
                        }
                      ],
                      "name": "subscription-name",
                      "payment_method_id": "${data.rediscloud_payment_method.card.id}"
                    }
        argumentDocs:
            dns_record: '- DNS record for the service attachment'
            endpoint_connection_name: '- (Required) The endpoint connection name prefix. This prefix that will be used to create the Private Service Connect endpoint in your Google Cloud account Modifying this attribute will force creation of a new resource.'
            forwarding_rule_name: '- Name of the forwarding rule for the service attachment'
            gcp_project_id: '- (Required) The Google Cloud Project ID Modifying this attribute will force creation of a new resource.'
            gcp_vpc_name: '- (Required) The GCP VPC Network name Modifying this attribute will force creation of a new resource.'
            gcp_vpc_subnet_name: '- (Required) The GCP Subnet name Modifying this attribute will force creation of a new resource.'
            ip_address_name: '- IP address name for the service attachment'
            name: '- Name of the service attachment'
            private_service_connect_endpoint_id: '- The ID of the Private Service Connect Endpoint'
            private_service_connect_service_id: '- (Required) The ID of the Private Service Connect Service relative to the associated subscription Modifying this attribute will force creation of a new resource.'
            service_attachments: '- The service attachment that is created for the Private Service Connect endpoint, documented below'
            subscription_id: '- (Required) The ID of the Pro subscription to attach Modifying this attribute will force creation of a new resource.'
        importStatements: []
    rediscloud_private_service_connect_endpoint_accepter:
        subCategory: ""
        description: Private Service Connect Endpoint Accepter resource for a Pro Subscription in the Redis Cloud Terraform provider.
        name: rediscloud_private_service_connect_endpoint_accepter
        title: rediscloud_private_service_connect_endpoint_accepter
        argumentDocs:
            action: '- (Required) Accept or reject the endpoint (accepted values are accept and reject)'
            private_service_connect_endpoint_id: '- (Required) The ID of the Private Service Connect Service relative to the associated subscription Modifying this attribute will force creation of a new resource.'
            private_service_connect_service_id: '- (Required) The ID of the Private Service Connect Service relative to the associated subscription Modifying this attribute will force creation of a new resource.'
            subscription_id: '- (Required) The ID of the Pro subscription to attach Modifying this attribute will force creation of a new resource.'
        importStatements: []
    rediscloud_subscription:
        subCategory: ""
        description: Subscription resource in the Redis Cloud Terraform provider.
        name: rediscloud_subscription
        title: rediscloud_subscription
        examples:
            - name: subscription-resource
              manifest: |-
                {
                  "cloud_provider": [
                    {
                      "provider": "${data.rediscloud_cloud_account.account.provider_type}",
                      "region": [
                        {
                          "multiple_availability_zones": true,
                          "networking_deployment_cidr": "10.0.0.0/24",
                          "preferred_availability_zones": [
                            "euw1-az1",
                            "euw1-az2",
                            "euw1-az3"
                          ],
                          "region": "eu-west-1"
                        }
                      ]
                    }
                  ],
                  "creation_plan": [
                    {
                      "dataset_size_in_gb": 15,
                      "modules": [
                        "RedisJSON"
                      ],
                      "quantity": 1,
                      "replication": true,
                      "throughput_measurement_by": "operations-per-second",
                      "throughput_measurement_value": 20000
                    }
                  ],
                  "maintenance_windows": [
                    {
                      "mode": "manual",
                      "window": [
                        {
                          "days": [
                            "Tuesday",
                            "Friday"
                          ],
                          "duration_in_hours": 8,
                          "start_hour": 22
                        }
                      ]
                    }
                  ],
                  "memory_storage": "ram",
                  "name": "subscription-name",
                  "payment_method": "credit-card",
                  "payment_method_id": "${data.rediscloud_payment_method.card.id}",
                  "redis_version": "7.2"
                }
              references:
                cloud_provider.provider: data.rediscloud_cloud_account.account.provider_type
                payment_method_id: data.rediscloud_payment_method.card.id
        argumentDocs:
            allowlist: '- (Optional) An allowlist object, documented below'
            allowlist.cidrs: '- (Optional) Set of CIDR ranges that are allowed to access the databases associated with this subscription'
            allowlist.security_group_ids: '- (Required) Set of security groups that are allowed to access the databases associated with this subscription'
            cloud_provider: '- (Required) A cloud provider object, documented below. Modifying this attribute will force creation of a new resource.'
            cloud_provider.cloud_account_id: |-
                - (Optional) Cloud account identifier. Default: Redis Labs internal cloud account. Modifying this attribute will force creation of a new resource.
                (using Cloud Account ID = 1 implies using Redis Labs internal cloud account). Note that a GCP subscription can be created
                only with Redis Labs internal cloud account
            cloud_provider.provider: '- (Optional) The cloud provider to use with the subscription, (either AWS or GCP). Default: ‘AWS’. Modifying this attribute will force creation of a new resource.'
            cloud_provider.region: '- (Required) A region object, documented below. Modifying this attribute will force creation of a new resource.'
            creation_plan: '- (Required) A creation plan object, documented below.'
            creation_plan.average_item_size_in_bytes: |-
                - (Optional) Relevant only to ram-and-flash clusters
                Estimated average size (measured in bytes) of the items stored in the database. The value needs to
                be the maximum average item size defined in one of your databases.  Default: 1000
            creation_plan.dataset_size_in_gb: instead
            creation_plan.memory_limit_in_gb: '- (Required) Maximum memory usage that will be used for your largest planned database. You can not set both dataset_size_in_gb and memory_limit_in_gb. Deprecated: Use'
            creation_plan.modules: |-
                - (Optional) a list of modules that will be used by the databases in this subscription. Not currently compatible with ‘ram-and-flash’ memory storage.
                Example: modules = ["RedisJSON", "RediSearch", "RedisTimeSeries", "RedisBloom"]
            creation_plan.quantity: '- (Required) The planned number of databases in the subscription'
            creation_plan.replication: '- (Optional) Databases replication. Default: ‘true’'
            creation_plan.support_oss_cluster_api: '- (Optional) Support Redis open-source (OSS) Cluster API. Default: ‘false’'
            creation_plan.throughput_measurement_by: '- (Required) Throughput measurement method that will be used by your databases. Either number-of-shards or operations-per-second. number-of-shards is deprecated and only supported for legacy deployments.'
            creation_plan.throughput_measurement_value: '- (Required) Throughput value that will be used by your databases (as applies to selected measurement method). The value needs to be the maximum throughput measurement value defined in one of your databases'
            maintenance_windows: '- (Optional) The subscription''s maintenance window specification, documented below.'
            memory_storage: '- (Optional) Memory storage preference: either ‘ram’ or a combination of ‘ram-and-flash’. Default: ‘ram’. Modifying this attribute will force creation of a new resource.'
            name: '- (Required) A meaningful name to identify the subscription'
            payment_method: '(Optional) The payment method for the requested subscription, (either credit-card or marketplace). If credit-card is specified, payment_method_id must be defined. Default: ''credit-card''. (Changes to) this attribute are ignored after creation.'
            payment_method_id: '- (Optional) A valid payment method pre-defined in the current account. Only Required when payment_method is credit-card.'
            redis_version: '- (Optional) The Redis version of the databases in the subscription. If omitted, the Redis version will be the default. Modifying this attribute will force creation of a new resource.'
            region.days: '- A list of weekdays on which the window is open (''Monday'', ''Tuesday'' etc)'
            region.duration_in_hours: '- How long the window is open (4-24 hours)'
            region.mode: '- Either automatic (Redis specified) or manual (User specified)'
            region.multiple_availability_zones: '- (Optional) Support deployment on multiple availability zones within the selected region. Default: ‘false’. Modifying this attribute will force creation of a new resource.'
            region.networking_deployment_cidr: '- (Required) Deployment CIDR mask. The total number of bits must be 24 (x.x.x.x/24). Modifying this attribute will force creation of a new resource.'
            region.networking_vpc_id: |-
                - (Optional) Either an existing VPC Id (already exists in the specific region) or create a new VPC
                (if no VPC is specified). VPC Identifier must be in a valid format (for example: ‘vpc-0125be68a4986384ad’) and exist
                within the hosting account. Modifying this attribute will force creation of a new resource.
            region.networks: '- List of generated network configuration'
            region.networks.networking_deployment_cidr: '- Deployment CIDR mask for the generated'
            region.networks.networking_subnet_id: '- The subnet that the subscription deploys into'
            region.networks.networking_vpc_id: '- VPC id for the generated network'
            region.networks.priceCurrency: '- The price currency'
            region.networks.pricePerUnit: '- Price per Unit.'
            region.networks.pricePeriod: '- Price period. E.g. ''hour''.'
            region.networks.quantity: '- Self-explanatory.'
            region.networks.quantityMeasurement: '- Self-explanatory.'
            region.networks.type: '- The type of cost. E.g. ''Shards''.'
            region.networks.typeDetails: '- Further detail E.g. ''micro''.'
            region.preferred_availability_zones: '- (Optional) Availability zones deployment preferences (for the selected provider & region). If multiple_availability_zones is set to ''true'', select three availability zones from the list. If you don''t want to specify preferred availability zones, set this attribute to an empty list (''[]''). Modifying this attribute will force creation of a new resource.'
            region.region: '- (Required) Deployment region as defined by cloud provider. Modifying this attribute will force creation of a new resource.'
            region.start_hour: '- What hour in the day (0-23) the window opens'
            region.window: '- A list of windows (if manual mode)'
            timeouts.create: '- (Defaults to 30 mins) Used when creating the subscription'
            timeouts.delete: '- (Defaults to 10 mins) Used when destroying the subscription'
            timeouts.update: '- (Defaults to 30 mins) Used when updating the subscription'
        importStatements: []
    rediscloud_subscription_database:
        subCategory: ""
        description: Database resource in the Redis Cloud Terraform provider
        name: rediscloud_subscription_database
        title: rediscloud_subscription_database
        examples:
            - name: database-resource
              manifest: |-
                {
                  "alert": [
                    {
                      "name": "dataset-size",
                      "value": 1
                    }
                  ],
                  "data_persistence": "aof-every-write",
                  "dataset_size_in_gb": 15,
                  "modules": [
                    {
                      "name": "RedisJSON"
                    }
                  ],
                  "name": "database-name",
                  "replication": true,
                  "subscription_id": "${rediscloud_subscription.subscription-resource.id}",
                  "tags": {
                    "market": "emea"
                  },
                  "throughput_measurement_by": "operations-per-second",
                  "throughput_measurement_value": 20000
                }
              references:
                subscription_id: rediscloud_subscription.subscription-resource.id
              dependencies:
                rediscloud_subscription.subscription-resource: |-
                    {
                      "cloud_provider": [
                        {
                          "provider": "${data.rediscloud_cloud_account.account.provider_type}",
                          "region": [
                            {
                              "multiple_availability_zones": true,
                              "networking_deployment_cidr": "10.0.0.0/24",
                              "preferred_availability_zones": [
                                "euw1-az1",
                                "euw1-az2",
                                "euw1-az3"
                              ],
                              "region": "eu-west-1"
                            }
                          ]
                        }
                      ],
                      "creation_plan": [
                        {
                          "dataset_size_in_gb": 15,
                          "modules": [
                            "RedisJSON"
                          ],
                          "quantity": 1,
                          "replication": true,
                          "throughput_measurement_by": "operations-per-second",
                          "throughput_measurement_value": 20000
                        }
                      ],
                      "memory_storage": "ram",
                      "name": "subscription-name",
                      "payment_method": "credit-card",
                      "payment_method_id": "${data.rediscloud_payment_method.card.id}"
                    }
        argumentDocs:
            alert: '- (Optional) A block defining Redis database alert, documented below, can be specified multiple times'
            alert.name: '(Required) - Alert name. (either: ''dataset-size'', ''datasets-size'', ''throughput-higher-than'', ''throughput-lower-than'', ''latency'', ''syncsource-error'', ''syncsource-lag'' or ''connections-limit'')'
            alert.value: (Required) - Alert value
            average_item_size_in_bytes: |-
                - (Optional) Relevant only to ram-and-flash clusters. Estimated average size (measured in bytes)
                of the items stored in the database. Default: 1000
            client_ssl_certificate: '- (Optional) SSL certificate to authenticate user connections, conflicts with client_tls_certificates'
            client_tls_certificates: '- (Optional) A list of TLS certificates to authenticate user connections, conflicts with client_ssl_certificate'
            data_eviction: '- (Optional) The data items eviction policy (either: ''allkeys-lru'', ''allkeys-lfu'', ''allkeys-random'', ''volatile-lru'', ''volatile-lfu'', ''volatile-random'', ''volatile-ttl'' or ''noeviction''). Default: ''volatile-lru'''
            data_persistence: '- (Optional) Rate of database''s storage data persistence (either: ''none'', ''aof-every-1-second'', ''aof-every-write'', ''snapshot-every-1-hour'', ''snapshot-every-6-hours'' or ''snapshot-every-12-hours''). Default: ‘none’'
            dataset_size_in_gb: is unset
            db_id: '- Identifier of the database created'
            enable_default_user: (Optional) When true enables connecting to the database with the default user. Default true.
            enable_tls: '- (Optional) Use TLS for authentication. Default: ‘false’'
            external_endpoint_for_oss_cluster_api: |-
                - (Optional) Should use the external endpoint for open-source (OSS) Cluster API.
                Can only be enabled if OSS Cluster API support is enabled. Default: 'false'
            hashing_policy: |-
                - (Optional) List of regular expression rules to shard the database by. See
                the documentation on clustering for more information on the
                hashing policy. This cannot be set when support_oss_cluster_api is set to true.
            memory_limit_in_gb: '- (Optional -  Required if ) Maximum memory usage for this specific database, including replication and other overhead Deprecated in favor of'
            modules: '- (Optional) A list of modules objects, documented below. Modifying this attribute will force creation of a new resource.'
            name: '- (Required) A meaningful name to identify the database'
            password: '- (Optional) Password to access the database. If omitted, a random 32 character long alphanumeric password will be automatically generated'
            periodic_backup_path: '- (Optional) Path that will be used to store database backup files. Deprecated: Use'
            port: '- (Optional) TCP port on which the database is available - must be between 10000 and 19999. Modifying this attribute will force creation of a new resource.'
            private_endpoint: '- Private endpoint to access the database'
            protocol: '- (Optional) The protocol that will be used to access the database, (either ‘redis’ or ‘memcached’) Default: ‘redis’. Modifying this attribute will force creation of a new resource.'
            public_endpoint: '- Public endpoint to access the database'
            remote_backup: block instead
            remote_backup.interval: '(Required) - Defines the interval between backups. Should be in the following format ''every-x-hours''. x is one of [24,12,6,4,2,1]. For example: ''every-4-hours'''
            remote_backup.storage_path: (Required) - Defines a URI representing the backup storage location
            remote_backup.storage_type: (Required) - Defines the provider of the storage location
            remote_backup.time_utc: '(Optional) - Defines the hour automatic backups are made - only applicable when the interval is every-12-hours or every-24-hours. For example: ''14:00'''
            replica_of: |-
                - (Optional) Set of Redis database URIs, in the format redis://user:password@host:port, that this
                database will be a replica of. If the URI provided is Redis Labs Cloud instance, only host and port should be provided.
                Cannot be enabled when support_oss_cluster_api is enabled.
            replication: '- (Optional) Databases replication. Default: ‘true’'
            resp_version: '- (Optional) Either resp2 or resp3. Database''s RESP version. Must be compatible with the Redis version.'
            source_ips: '- (Optional) List of source IP addresses or subnet masks. If specified, Redis clients will be able to connect to this database only from within the specified source IP addresses ranges (example: [‘192.168.10.0/32’, ‘192.168.12.0/24’])'
            subscription_id: '- (Required) The ID of the subscription to create the database in. Modifying this attribute will force creation of a new resource.'
            support_oss_cluster_api: '- (Optional) Support Redis open-source (OSS) Cluster API. Default: ‘false’'
            tags: '- (Optional) A string/string map of Tags to associate with this database. Note that all keys and values must be lowercase.'
            throughput_measurement_by: '- (Required) Throughput measurement method that will be used by your databases. Either number-of-shards or operations-per-second. number-of-shards is deprecated and only supported for legacy deployments.'
            throughput_measurement_value: '- (Required) Throughput value (as applies to selected measurement method)'
            timeouts.create: '- (Defaults to 30 mins) Used when creating the database'
            timeouts.delete: '- (Defaults to 10 mins) Used when destroying the database'
            timeouts.update: '- (Defaults to 30 mins) Used when updating the database'
        importStatements: []
    rediscloud_subscription_peering:
        subCategory: ""
        description: Subscription VPC peering resource in the Redis Cloud Terraform provider.
        name: rediscloud_subscription_peering
        title: rediscloud_subscription_peering
        examples:
            - name: example
              manifest: |-
                {
                  "aws_account_id": "123456789012",
                  "region": "eu-west-1",
                  "subscription_id": "${rediscloud_subscription.example.id}",
                  "vpc_cidr": "10.0.0.0/8",
                  "vpc_id": "vpc-01234567890"
                }
              references:
                subscription_id: rediscloud_subscription.example.id
              dependencies:
                aws_vpc_peering_connection_accepter.example-peering: |-
                    {
                      "auto_accept": true,
                      "vpc_peering_connection_id": "${rediscloud_subscription_peering.example.aws_peering_id}"
                    }
                rediscloud_subscription.example: '{}'
            - name: example-peering
              manifest: |-
                {
                  "gcp_network_name": "${data.google_compute_network.network.name}",
                  "gcp_project_id": "${data.google_compute_network.network.project}",
                  "provider_name": "GCP",
                  "subscription_id": "${rediscloud_subscription.example.id}"
                }
              references:
                gcp_network_name: data.google_compute_network.network.name
                gcp_project_id: data.google_compute_network.network.project
                subscription_id: rediscloud_subscription.example.id
              dependencies:
                google_compute_network_peering.example-peering: |-
                    {
                      "name": "peering-gcp-example",
                      "network": "${data.google_compute_network.network.self_link}",
                      "peer_network": "https://www.googleapis.com/compute/v1/projects/${rediscloud_subscription_peering.example.gcp_redis_project_id}/global/networks/${rediscloud_subscription_peering.example.gcp_redis_network_name}"
                    }
                rediscloud_subscription.example: '{}'
        argumentDocs:
            aws_account_id: '- (Required AWS) AWS account ID that the VPC to be peered lives in. Modifying this attribute will force creation of a new resource.'
            aws_peering_id: Identifier of the AWS cloud peering
            gcp_network_name: '- (Required GCP) The name of the network to be peered. Modifying this attribute will force creation of a new resource.'
            gcp_peering_id: Identifier of the cloud peering
            gcp_project_id: '- (Required GCP) GCP project ID that the VPC to be peered lives in. Modifying this attribute will force creation of a new resource.'
            gcp_redis_network_name: The name of the Redis Enterprise Cloud network to be peered
            gcp_redis_project_id: Identifier of the Redis Enterprise Cloud GCP project to be peered
            provider_name: '- (Optional) The cloud provider to use with the vpc peering, (either AWS or GCP). Default: ‘AWS’. Modifying this attribute will force creation of a new resource.'
            region: '- (Required AWS) AWS Region that the VPC to be peered lives in. Modifying this attribute will force creation of a new resource.'
            status: is set to the current status of the peering - initiating-request, pending-acceptance, active, inactive or failed.
            subscription_id: '- (Required) A valid subscription predefined in the current account. Modifying this attribute will force creation of a new resource.'
            timeouts.create: '- (Defaults to 10 mins) Used when creating the peering connection'
            timeouts.delete: '- (Defaults to 10 mins) Used when deleting the peering connection'
            vpc_cidr: '- (Optional) CIDR range of the VPC to be peered. Either this or vpc_cidrs must be specified. Modifying this attribute will force creation of a new resource.'
            vpc_cidrs: '- (Optional) CIDR ranges of the VPC to be peered. Either this or vpc_cidr must be specified. Modifying this attribute will force creation of a new resource.'
            vpc_id: '- (Required AWS) Identifier of the VPC to be peered. Modifying this attribute will force creation of a new resource.'
        importStatements: []
    rediscloud_transit_gateway_attachment:
        subCategory: ""
        description: Transit Gateway Attachment resource in the Redis Cloud Terraform provider.
        name: rediscloud_transit_gateway_attachment
        title: rediscloud_transit_gateway_attachment
        examples:
            - name: attachment
              manifest: |-
                {
                  "subscription_id": "113491",
                  "tgw_id": "${data.rediscloud_transit_gateway.gateway.tgw_id}"
                }
              references:
                tgw_id: data.rediscloud_transit_gateway.gateway.tgw_id
        argumentDocs:
            attachment_status: '- The status of the Subscription/Transit Gateway attachment, if established'
            attachment_uid: '- A unique identifier for the Subscription/Transit Gateway attachment, if established'
            aws_account_id: '- The Transit Gateway''s AWS account id'
            aws_tgw_uid: '- The id of the Transit Gateway as known to AWS'
            cidrs: '- (Optional) A list of consumer Cidr blocks. May only be added once the Attachment has been accepted'
            status: '- The status of the Transit Gateway'
            subscription_id: '- (Required) The id of the Pro/Flexible subscription to attach'
            tgw_id: '- (Required) The id of the Transit Gateway to attach to'
        importStatements: []
